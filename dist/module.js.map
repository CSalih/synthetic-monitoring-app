{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///external \"@grafana/runtime\"","webpack:///external \"@grafana/data\"","webpack:///./components/TenantView.tsx","webpack:///./datasource/ConfigEditor.tsx","webpack:///external \"emotion\"","webpack:///./types.ts","webpack:///./legacy/config.ts","webpack:///./utils.ts","webpack:///./components/InstanceList.tsx","webpack:///./dashboards/loader.ts","webpack:///./components/DashboardList.tsx","webpack:///./components/TenantSetup.tsx","webpack:///./validation.ts","webpack:///./components/utils.tsx","webpack:///./components/PingSettings.tsx","webpack:///./components/http/AuthSettings.tsx","webpack:///./components/http/HttpSettings.tsx","webpack:///./components/DnsSettings.tsx","webpack:///./components/TcpSettings.tsx","webpack:///./components/CheckEditor.tsx","webpack:///./components/UptimeGauge.tsx","webpack:///./page/ChecksPage.tsx","webpack:///./components/ProbeEditor.tsx","webpack:///./page/ProbesPage.tsx","webpack:///./RootPage.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__values","__read","ar","error","__spread","concat","__makeTemplateObject","cooked","raw","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","render","settings","margin","LinkedDatasourceView","info","metrics","logs","state","onClick","ds","type","update","partial","path","id","componentDidMount","setState","datasources","grafanaName","className","src","meta","logos","small","onAccessTokenChange","event","onOptionsChange","options","secureJsonData","accessToken","target","onResetAccessToken","secureJsonFields","isConfigured","isValid","jsonData","SecretFormField","placeholder","labelWidth","inputWidth","onReset","onChange","apiHost","hostedId","__WEBPACK_EXTERNAL_MODULE__7__","IpVersion","HttpMethod","HttpVersion","DnsRecordType","DnsProtocol","CheckType","OrgRole","$scope","$injector","appEditCtrl","setPostUpdateHook","postUpdate","appModel","console","log","enabled","templateUrl","findHostedInstance","known","basicAuthUser","instanceUrl","url","getHostedLokiAndPrometheusInfo","values","indexOf","createNewApiInstance","post","access","isDefault","createHostedInstance","data","basicAuth","basicAuthPassword","datasource","hasRole","requiredRole","user","bootData","ADMIN","orgRole","EDITOR","VIEWER","types","keys","HTTP","defaultSettings","http","method","GET","ipVersion","V4","noFollowRedirects","PING","ping","dontFragment","DNS","dns","recordType","A","server","protocol","UDP","port","TCP","tcp","tls","dashboardUID","checkType","dashboards","instanceSettings","undefined","item","title","toLocaleLowerCase","selected","props","instances","map","instance","isSelected","logo","hostedType","onSelected","variant","href","orgSlug","rel","icon","dashboardPaths","findSyntheticMonitoringFolder","backendSrv","folders","folder","importDashboard","json","dashboard","overwrite","inputs","pluginId","folderId","uid","version","latestVersion","listAppDashboards","dInfo","removeDashboard","onImport","updated","findIndex","onRemove","splice","checkUpdates","latestDashboards","withImports","style","textAlign","buttonText","defaultApiHost","showResetModal","resetConfig","showAdvanced","onInit","adminApiToken","registerInit","alert","logsInstance","tenantInfo","logInstance","metricsInstance","metricInstance","onApiHostChange","onApiTokenChange","onSelectLogs","onSelectMetrics","createDataSource","hosted","getViewerToken","token","onSave","hostedMetrics","find","hostedLogs","registerSave","window","location","reload","onToggleAdvanced","isOpen","show","renderSetup","filter","wrap","width","collapsible","onToggle","TenantView","confirmText","onConfirm","onDismiss","CheckValidation","job","validateJob","validateTarget","frequency","validateFrequency","timeout","validateTimeout","labels","validateLabels","checkT","probes","validateProbes","validateCheck","check","typeOfCheck","URL","validateHttpTarget","freq","validateLabelName","validateLabelValue","labelRegex","test","numLabels","addLabel","onUpdate","onDelete","index","isEditor","limit","justify","items","renderItem","disabled","size","onNameChange","onValueChange","componentDidUpdate","oldProps","invalid","IpOptions","Any","V6","onIpVersionChange","onDontFragmentChange","onToggleOptions","description","padding","hasBasicAuth","hasBearerToken","showAuthentication","onToggleAuthentication","onBearerTokenChange","onBasicAuthChange","onHasBearerAuth","bearerToken","username","password","spacing","horizontal","auth","onUsernameChange","onPasswordChange","onHasBasicAuth","headers","failIfSSL","failIfNotSSL","validStatusCodes","validHTTPVersions","failIfBodyMatchesRegexp","failIfBodyNotMatchesRegexp","failIfHeaderMatchesRegexp","failIfHeaderNotMatchesRegexp","cacheBustingQueryParamName","showValidation","showTLS","onMethodChange","onBodyChange","onNoFollowRedirectsChange","onFailIfNotSSLChange","onFailIfSSLChange","onCacheBustingQueryParamNameChange","onToggleValidation","onAuthUpdate","onToggleTLS","onTLSChange","tlsConfig","onValidHttpVersionsChange","onValidStatusCodeChange","onHeadersUpdate","onFailIfBodyMatchesRegexpChange","forEach","onFailIfBodyMatchesRegexpDelete","addFailIfBodyMatchesRegexp","onFailIfBodyNotMatchesRegexpChange","onFailIfBodyNotMatchesRegexpDelete","addFailIfBodyNotMatchesRegexp","onFailIfHeaderMatchesUpdate","headerMatches","matches","onFailIfHeaderNotMatchesUpdate","headersToLabels","parts","split","generateValidStatusCodes","validCodes","httpVersionOptions","HTTP1_0","HTTP1_1","HTTP2_0","methodOptions","HEAD","PUT","POST","DELETE","OPTIONS","rows","insecureSkipVerify","caCert","clientCert","clientKey","serverName","cfg","onInsecureSkipVerifyChange","onServerNameChange","onCACertChange","onClientCertChange","onClientKeyChange","onHeaderChange","header","regexp","allowMissing","onRegexpChange","onAllowMissingChange","onHeaderMatchesDelete","onHeaderMatchesAdd","validRCodes","validateAnswerRRS","validateAuthorityRRS","validateAdditionalRRS","onProtocolChange","onPortChange","valueAsNumber","onServerChange","onRecordTypeChange","onShowAdvanced","onShowValidation","onValidRCodesChange","onValidateAnswerChange","validations","failIfMatchesRegexp","failIfNotMatchesRegexp","onValidateAuthorityChange","onValidateAdditionalChange","recordTypes","AAAA","CNAME","MX","NS","SOA","TXT","PTR","SRV","protocols","onFailIfMatchesRegexpChange","onFailIfNotMatchesRegexpChange","onFailIfMatchesRegexpDelete","onFailIfNotMatchesRegexpDelete","onFailIfMatchesRegexpAdd","onFailIfNotMatchesRegexpAdd","queryResponse","showQueryResponse","onTLSCOnfigChange","onShowQueryResponse","onQueryResponsesUpdate","config","queryResponses","expect","atob","send","startTLS","btoa","onSendChange","onExpectChange","onStartTLSChange","onQueryResponseDelete","onQueryResponseAdd","showDeleteModal","showOptions","targetHelp","example","showDeleteCheckModal","onRemoveCheck","deleteCheck","onReturn","onLabelsUpdate","onProbesUpdate","onSettingsUpdate","onSetType","targetHelpText","onJobUpdate","onTargetUpdate","onFrequencyUpdate","onTimeoutUpdate","updateCheck","addCheck","onEnableChange","onBack","listProbes","text","resp","legend","checkTypes","required","availableProbes","suffix","max","min","toLocaleUpperCase","onJsonChange","JSON","parse","onSettingsChange","probeStr","join","str","onAllLocations","onClearLocations","online","selectedProbes","existing","closeMenuOnSelect","lastUpdate","numeric","points","filterString","labelNames","labelValues","filters","k","queryUptime","sparkline","Math","floor","Date","now","datasourceRequest","params","query","time","ok","uptime","parseFloat","color","toFixed","queryHistory","start","end","height","sparklineData","yMin","yMax","theme","colorMode","Value","graphMode","Area","iconName","checks","filteredChecks","addNew","typeFilter","searchFilter","totalPages","currentPage","checksPerPage","onSelectCheck","showDashboard","stopPropagation","api","q","onTypeFilterChanged","filterChecks","onFilterByLabel","labelName","labelValue","onSearchFilterChange","changePage","toPage","onAddNew","onRefresh","listChecks","onGoBack","refresh","sortedChecks","sort","a","localeCompare","ceil","num","parseInt","slice","formatLabels","filtered","term","match","renderNoChecks","renderCheckList","getMetricsDS","autoFocus","prefix","currentTarget","checkId","numberOfPages","onNavigate","template","showTokenModal","probeToken","showDeleteProbeModal","onRemoveProbe","probe","deleteProbe","onLatUpdate","latitude","onLongUpdate","longitude","onRegionUpdate","region","onNameUpdate","updateProbe","addProbe","onResetToken","resetProbeToken","renderStatus","onlineTxt","onlineIcon","align","onSelectProbe","labelsToString","public","onlineChange","renderProbeList","probeId","loadInstances","global","loadDataSourceIfExists","valid","updateNav","prevProps","page","onNavChanged","tabs","found","tab","active","node","img","large","subTitle","children","main","renderMultipleConfigs","dashboardRedirect","setRootPage"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import React, { PureComponent } from 'react';\nimport { SMOptions, LinkedDatsourceInfo } from 'datasource/types';\nimport { config, getLocationSrv } from '@grafana/runtime';\nimport { DataSourceInstanceSettings } from '@grafana/data';\nimport { Button, Container } from '@grafana/ui';\n\ninterface Props {\n  settings: SMOptions;\n}\n\nexport class TenantView extends PureComponent<Props> {\n  render() {\n    const { settings } = this.props;\n    if (!settings) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div>\n        <h2>Linked Data Sources</h2>\n        <Container margin=\"sm\">\n          <LinkedDatasourceView info={settings.metrics} />\n          <LinkedDatasourceView info={settings.logs} />\n        </Container>\n      </div>\n    );\n  }\n}\n\ninterface Props2 {\n  info: LinkedDatsourceInfo;\n}\ninterface State2 {\n  ds?: DataSourceInstanceSettings;\n}\n\nclass LinkedDatasourceView extends PureComponent<Props2, State2> {\n  state: State2 = {};\n\n  componentDidMount() {\n    const { info } = this.props;\n    this.setState({\n      ds: config.datasources[info.grafanaName],\n    });\n  }\n\n  onClick = () => {\n    const { ds } = this.state;\n    if (ds?.type === 'synthetic-monitoring-datasource') {\n      getLocationSrv().update({\n        partial: false,\n        path: `a/grafana-synthetic-monitoring-app/`,\n      });\n    } else {\n      getLocationSrv().update({\n        partial: false,\n        path: `datasources/edit/${ds?.id}/`,\n      });\n    }\n  };\n\n  render() {\n    const { ds } = this.state;\n    if (!ds) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div className=\"add-data-source-item\" onClick={this.onClick}>\n        <img className=\"add-data-source-item-logo\" src={ds.meta.info.logos.small} />\n        <div className=\"add-data-source-item-text-wrapper\">\n          <span className=\"add-data-source-item-text\">{ds.name}</span>\n          <span className=\"add-data-source-item-desc\">{ds.type}</span>\n        </div>\n        <div className=\"add-data-source-item-actions\">\n          <Button>Edit</Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, ChangeEvent } from 'react';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { SMOptions, SecureJsonData } from './types';\nimport { LegacyForms } from '@grafana/ui';\nimport { TenantView } from 'components/TenantView';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<SMOptions, SecureJsonData> {}\n\nexport class ConfigEditor extends PureComponent<Props> {\n  onAccessTokenChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        accessToken: event.target.value,\n      },\n    });\n  };\n\n  onResetAccessToken = () => {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        accessToken: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        accessToken: '',\n      },\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { secureJsonFields } = options;\n    const secureJsonData = (options.secureJsonData || {}) as SecureJsonData;\n    function isConfigured(): boolean {\n      return (secureJsonFields && secureJsonFields.accessToken) as boolean;\n    }\n    return (\n      <div>\n        {isValid(options.jsonData) && isConfigured() && <TenantView settings={options.jsonData} />}\n        <br />\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <LegacyForms.SecretFormField\n                isConfigured={isConfigured()}\n                value={secureJsonData.accessToken || ''}\n                label=\"Access Token\"\n                placeholder=\"access token saved on the server\"\n                labelWidth={10}\n                inputWidth={20}\n                onReset={this.onResetAccessToken}\n                onChange={this.onAccessTokenChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport function isValid(settings: SMOptions): boolean {\n  if (!settings) {\n    return false;\n  }\n\n  const { apiHost, metrics, logs } = settings;\n  if (!apiHost || !metrics || !metrics.grafanaName || !metrics.hostedId) {\n    return false;\n  }\n\n  if (!logs || !logs.grafanaName || !logs.hostedId) {\n    return false;\n  }\n\n  return true;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","import { DataSourceApi } from '@grafana/data';\nimport { SMDataSource } from 'datasource/DataSource';\n\n// App Settings\nexport interface GlobalSettings {\n  // anything?\n}\n\nexport enum IpVersion {\n  Any = 'Any',\n  V4 = 'V4',\n  V6 = 'V6',\n}\n\nexport interface PingSettings {\n  ipVersion: IpVersion;\n  dontFragment: boolean;\n}\n\nexport enum HttpMethod {\n  GET = 'GET',\n  HEAD = 'HEAD',\n  POST = 'POST',\n  PUT = 'PUT',\n  OPTIONS = 'OPTIONS',\n  DELETE = 'DELETE',\n}\n\nexport enum HttpVersion {\n  HTTP1_0 = 'HTTP/1.0',\n  HTTP1_1 = 'HTTP/1.1',\n  HTTP2_0 = 'HTTP/2',\n}\n\nexport enum DnsRecordType {\n  A = 'A',\n  AAAA = 'AAAA',\n  CNAME = 'CNAME',\n  MX = 'MX',\n  NS = 'NS',\n  PTR = 'PTR',\n  SOA = 'SOA',\n  SRV = 'SRV',\n  TXT = 'TXT',\n}\n\nexport enum DnsProtocol {\n  TCP = 'TCP',\n  UDP = 'UDP',\n}\n\nexport interface HeaderMatch {\n  header: string;\n  regexp: string;\n  allowMissing: boolean;\n}\n\n// HttpSettings provides the settings for a HTTP check.\nexport interface HttpSettings {\n  method: HttpMethod;\n  headers?: string[];\n  body?: string;\n  ipVersion: IpVersion;\n  noFollowRedirects: boolean;\n  tlsConfig?: TLSConfig;\n\n  // Authentication\n  bearerToken?: string;\n  basicAuth?: BasicAuth;\n\n  // validations\n  failIfSSL?: boolean;\n  failIfNotSSL?: boolean;\n  validStatusCodes?: number[];\n  validHTTPVersions?: HttpVersion[];\n  failIfBodyMatchesRegexp?: string[];\n  failIfBodyNotMatchesRegexp?: string[];\n  failIfHeaderMatchesRegexp?: HeaderMatch[];\n  failIfHeaderNotMatchesRegexp?: HeaderMatch[];\n\n  cacheBustingQueryParamName?: string;\n}\n\nexport interface TLSConfig {\n  insecureSkipVerify: boolean;\n  caCert: string;\n  clientCert: string;\n  clientKey: string;\n  serverName: string;\n}\n\nexport interface BasicAuth {\n  username: string;\n  password: string;\n}\n\nexport interface DNSRRValidator {\n  failIfMatchesRegexp: string[];\n  failIfNotMatchesRegexp: string[];\n}\n\n// DnsSettings provides the settings for a DNS check.\nexport interface DnsSettings {\n  recordType: DnsRecordType;\n  server: string;\n  ipVersion: IpVersion;\n  protocol: DnsProtocol;\n  port: number;\n\n  // validation\n  validRCodes?: string[];\n  validateAnswerRRS?: DNSRRValidator;\n  validateAuthorityRRS?: DNSRRValidator;\n  validateAdditionalRRS?: DNSRRValidator;\n}\n\nexport interface TcpSettings {\n  ipVersion: IpVersion;\n  tls: boolean;\n  tlsConfig?: TLSConfig;\n  queryResponse?: TCPQueryResponse[];\n}\n\nexport interface TCPQueryResponse {\n  send: string;\n  expect: string;\n  startTLS: boolean;\n}\n\nexport interface BaseObject {\n  id?: number;\n  tenantId?: number;\n  created?: number; // seconds\n  updated?: number; // seconds\n}\n\nexport interface Label {\n  name: string;\n  value: string;\n}\n\nexport interface Probe extends BaseObject {\n  name: string;\n  public: boolean;\n  latitude: number;\n  longitude: number;\n  region: string;\n  online: boolean;\n  onlineChange: number;\n  labels: Label[];\n}\n\nexport interface Check extends BaseObject {\n  job: string;\n  target: string;\n  frequency: number;\n  offset?: number;\n  timeout: number;\n  enabled: boolean;\n\n  labels: Label[]; // Currently list of [name:value]... can it be Labels?\n  settings: Settings; //\n\n  // Link to probes\n  probes: number[];\n}\n\nexport interface Settings {\n  http?: HttpSettings;\n  ping?: PingSettings;\n  dns?: DnsSettings;\n  tcp?: TcpSettings;\n}\n\nexport enum CheckType {\n  HTTP = 'http',\n  PING = 'ping',\n  DNS = 'dns',\n  TCP = 'tcp',\n}\n\nexport interface HostedInstance {\n  id: number;\n  orgSlug: string;\n  orgName: string;\n  clusterSlug: string;\n  clusterName: string;\n  type: string; // \"prometheus\" \"logs\",\n  name: string;\n  url: string;\n  description: string;\n  status: string;\n  currentActiveSeries: number;\n  currentDpm: number;\n  currentUsage: number;\n}\n\nexport interface RegistrationInfo {\n  accessToken: string;\n  tenantInfo: {\n    id: number;\n    metricInstance: HostedInstance;\n    logInstance: HostedInstance;\n  };\n  instances: HostedInstance[];\n}\n\nexport interface GrafanaInstances {\n  api: SMDataSource;\n  metrics?: DataSourceApi;\n  logs?: DataSourceApi;\n}\n\nexport interface User {\n  email: string;\n  id: number;\n  isGrafanaAdmin: boolean;\n  isSignedIn: boolean;\n  orgId: number;\n  orgName: string;\n  orgRole: OrgRole;\n}\n\nexport enum OrgRole {\n  ADMIN = 'Admin',\n  EDITOR = 'Editor',\n  VIEWER = 'Viewer',\n}\n","import { PluginMeta } from '@grafana/data';\nimport { getLocationSrv } from '@grafana/runtime';\n\nexport class ExampleConfigCtrl {\n  static templateUrl = 'legacy/config.html';\n\n  appEditCtrl: any;\n  appModel?: PluginMeta;\n\n  /** @ngInject */\n  constructor($scope: any, $injector: any) {\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    // Make sure it has a JSON Data spot\n    if (!this.appModel) {\n      this.appModel = {} as PluginMeta;\n    }\n\n    // Required until we get the types sorted on appModel :(\n    const appModel = this.appModel as any;\n    if (!appModel.jsonData) {\n      appModel.jsonData = {};\n    }\n\n    console.log('ExampleConfigCtrl', this);\n  }\n\n  postUpdate() {\n    if (!this.appModel?.enabled) {\n      console.log('Not enabled...');\n      return;\n    }\n\n    getLocationSrv().update({\n      path: 'a/grafana-synthetic-monitoring-app',\n      partial: false,\n    });\n  }\n}\n","import { DataSourceInstanceSettings, DataSourceSettings } from '@grafana/data';\n\nimport { SMOptions, DashboardInfo } from './datasource/types';\n\nimport { config, getBackendSrv } from '@grafana/runtime';\nimport {\n  HostedInstance,\n  User,\n  OrgRole,\n  CheckType,\n  Settings,\n  IpVersion,\n  HttpMethod,\n  DnsRecordType,\n  DnsProtocol,\n} from 'types';\nimport { SMDataSource } from 'datasource/DataSource';\n\n/**\n * Find all synthetic-monitoring datasources\n */\nexport function findSMDataSources(): Array<DataSourceInstanceSettings<SMOptions>> {\n  return Object.values(config.datasources).filter(ds => {\n    return ds.type === 'synthetic-monitoring-datasource';\n  }) as Array<DataSourceInstanceSettings<SMOptions>>;\n}\n\n/** Given hosted info, link to an existing instance */\nexport function findHostedInstance(\n  known: DataSourceInstanceSettings[],\n  info?: HostedInstance\n): DataSourceInstanceSettings | undefined {\n  if (info) {\n    const basicAuthUser = `${info.id}`;\n    const instanceUrl = info.url + (info.type === 'logs' ? '' : '/api/prom');\n    for (const ds of known) {\n      if (ds.url === instanceUrl) {\n        console.log('MAYBE:', basicAuthUser, (ds as any).basicAuthUser, ds);\n        if (basicAuthUser === (ds as any).basicAuthUser) {\n          return ds;\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\n/** Given hosted info, link to an existing instance */\nexport async function getHostedLokiAndPrometheusInfo(): Promise<DataSourceInstanceSettings[]> {\n  const settings: DataSourceInstanceSettings[] = [];\n  for (const ds of Object.values(config.datasources)) {\n    if (ds.type === 'prometheus' || ds.type === 'loki') {\n      const s = await getBackendSrv().get(`api/datasources/${ds.id}`);\n      if (s.url && s.url.indexOf('grafana.net') > 0) {\n        settings.push(s as DataSourceInstanceSettings);\n      }\n    }\n  }\n  return settings;\n}\n\nexport async function createNewApiInstance(): Promise<DataSourceSettings> {\n  return getBackendSrv().post('api/datasources', {\n    name: 'Synthetic Monitoring',\n    type: 'synthetic-monitoring-datasource',\n    access: 'proxy',\n    isDefault: false,\n  });\n}\n\nexport async function createHostedInstance(\n  name: string,\n  info: HostedInstance,\n  key: string\n): Promise<DataSourceInstanceSettings> {\n  const data = {\n    name,\n    url: info.url + (info.type === 'logs' ? '' : '/api/prom'),\n    access: 'proxy',\n    basicAuth: true,\n    basicAuthUser: `${info.id}`,\n    secureJsonData: {\n      basicAuthPassword: key,\n    },\n    type: info.type === 'logs' ? 'loki' : 'prometheus',\n  };\n  return getBackendSrv()\n    .post('api/datasources', data)\n    .then(d => {\n      return d.datasource;\n    });\n}\n\nexport function hasRole(requiredRole: OrgRole): boolean {\n  const user: User = config.bootData.user;\n  switch (requiredRole) {\n    case OrgRole.ADMIN: {\n      return user.orgRole === OrgRole.ADMIN;\n    }\n    case OrgRole.EDITOR: {\n      return user.orgRole === OrgRole.ADMIN || user.orgRole === OrgRole.EDITOR;\n    }\n    case OrgRole.VIEWER: {\n      return user.orgRole === OrgRole.ADMIN || user.orgRole === OrgRole.EDITOR || user.orgRole === OrgRole.VIEWER;\n    }\n    default: {\n      return false;\n    }\n  }\n}\n\nexport function checkType(settings: Settings): CheckType {\n  let types = Object.keys(settings);\n  if (types.length < 1) {\n    return CheckType.HTTP;\n  }\n  return types[0] as CheckType;\n}\n\nexport function defaultSettings(t: CheckType): Settings | undefined {\n  switch (t) {\n    case CheckType.HTTP: {\n      return {\n        http: {\n          method: HttpMethod.GET,\n          ipVersion: IpVersion.V4,\n          noFollowRedirects: false,\n        },\n      };\n    }\n    case CheckType.PING: {\n      return {\n        ping: {\n          ipVersion: IpVersion.V4,\n          dontFragment: false,\n        },\n      };\n    }\n    case CheckType.DNS: {\n      return {\n        dns: {\n          recordType: DnsRecordType.A,\n          server: '8.8.8.8',\n          ipVersion: IpVersion.V4,\n          protocol: DnsProtocol.UDP,\n          port: 53,\n        },\n      };\n    }\n    case CheckType.TCP: {\n      return {\n        tcp: {\n          ipVersion: IpVersion.V4,\n          tls: false,\n        },\n      };\n    }\n  }\n}\n\n/** Given hosted info, link to an existing instance */\nexport function dashboardUID(checkType: string, ds: SMDataSource): DashboardInfo | undefined {\n  const dashboards = ds.instanceSettings.jsonData.dashboards;\n  let target: DashboardInfo | undefined = undefined;\n  for (const item of dashboards) {\n    if (item.title.toLocaleLowerCase() === 'sm ' + checkType) {\n      target = item;\n    }\n  }\n  return target;\n}\n","import React, { PureComponent } from 'react';\nimport { Button, LinkButton } from '@grafana/ui';\nimport { HostedInstance } from 'types';\nimport { css } from 'emotion';\n\ninterface Props {\n  selected: number;\n  instances: HostedInstance[];\n  onSelected: (id: number) => void;\n}\n\nexport class InstanceList extends PureComponent<Props> {\n  render() {\n    const { selected } = this.props;\n    return (\n      <div>\n        {this.props.instances.map(instance => {\n          const isSelected = selected === instance.id;\n          let logo = 'public/app/plugins/datasource/prometheus/img/prometheus_logo.svg';\n          let hostedType = 'metrics';\n          if (instance.type === 'logs') {\n            logo = 'public/app/plugins/datasource/loki/img/loki_icon.svg';\n            hostedType = 'logs';\n          }\n\n          let className = 'add-data-source-item';\n          if (isSelected) {\n            // 1px solid $blue-light;\n            className += ' ' + css(`border:1px solid #5794f2`);\n          }\n\n          return (\n            <div key={instance.id} className={className} onClick={() => this.props.onSelected(instance.id)}>\n              <img className=\"add-data-source-item-logo\" src={logo} />\n              <div className=\"add-data-source-item-text-wrapper\">\n                <span className=\"add-data-source-item-text\">{instance.name}</span>\n                <span className=\"add-data-source-item-desc\">{instance.url}</span>\n              </div>\n              <div className=\"add-data-source-item-actions\">\n                <LinkButton\n                  variant=\"secondary\"\n                  href={`https://grafana.com/orgs/${instance.orgSlug}/hosted-${hostedType}/${instance.id}?utm_source=synthetic_monitoring_app`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  icon=\"external-link-alt\"\n                >\n                  grafana.com\n                </LinkButton>\n                {!isSelected && <Button>Select</Button>}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import { getBackendSrv } from '@grafana/runtime';\nimport { DashboardInfo, FolderInfo, SMOptions } from 'datasource/types';\n\nexport const dashboardPaths = [\n  'sm-http.json', // The path\n  'sm-ping.json',\n  'sm-dns.json',\n  'sm-tcp.json',\n  'sm-summary.json',\n];\n\nasync function findSyntheticMonitoringFolder(): Promise<FolderInfo> {\n  const backendSrv = getBackendSrv();\n  const folders = (await backendSrv.get(`api/folders`)) as FolderInfo[];\n  for (const folder of folders) {\n    if (folder.title === 'SyntheticMonitoring') {\n      return folder;\n    }\n  }\n\n  return await backendSrv.post('api/folders', {\n    title: 'SyntheticMonitoring',\n  });\n}\n\nexport async function importDashboard(path: string, options: SMOptions): Promise<DashboardInfo> {\n  const backendSrv = getBackendSrv();\n\n  const json = await backendSrv.get(`public/plugins/grafana-synthetic-monitoring-app/dashboards/${path}`);\n\n  const folder = await findSyntheticMonitoringFolder();\n\n  const info = await backendSrv.post('api/dashboards/import', {\n    dashboard: json,\n    overwrite: true, // UID?\n    inputs: [\n      { name: 'DS_SM_METRICS', type: 'datasource', pluginId: 'prometheus', value: options.metrics.grafanaName },\n      { name: 'DS_SM_LOGS', type: 'datasource', pluginId: 'loki', value: options.logs.grafanaName },\n    ],\n    folderId: folder.id,\n  });\n\n  return {\n    title: info.title,\n    uid: json.uid,\n    json: path,\n    version: json.version,\n    latestVersion: json.version,\n  };\n}\n\nexport async function listAppDashboards(): Promise<DashboardInfo[]> {\n  const backendSrv = getBackendSrv();\n  let dashboards: DashboardInfo[] = [];\n  for (const p of dashboardPaths) {\n    const json = await backendSrv.get(`public/plugins/grafana-synthetic-monitoring-app/dashboards/${p}`);\n\n    const dInfo = {\n      title: json.title,\n      uid: json.uid,\n      json: p,\n      version: 0,\n      latestVersion: json.version,\n    };\n    dashboards.push(dInfo);\n  }\n  return dashboards;\n}\n\nexport async function removeDashboard(dashboard: DashboardInfo): Promise<any> {\n  const backendSrv = getBackendSrv();\n  return backendSrv.delete(`/api/dashboards/uid/${dashboard.uid}`);\n}\n","import React, { PureComponent } from 'react';\nimport { Icon } from '@grafana/ui';\nimport { DashboardInfo, SMOptions } from 'datasource/types';\nimport { listAppDashboards, importDashboard, removeDashboard } from 'dashboards/loader';\n\ninterface Props {\n  checkUpdates: boolean;\n  options: SMOptions;\n  onChange?: (options: SMOptions) => void;\n}\n\ninterface State {\n  dashboards: DashboardInfo[];\n}\n\nexport class DashboardList extends PureComponent<Props, State> {\n  state: State = {\n    dashboards: this.props.options.dashboards,\n  };\n\n  async componentDidMount() {\n    const { checkUpdates, onChange } = this.props;\n    if (!checkUpdates || !onChange) {\n      return;\n    }\n\n    // merge dashboards known to grafana with latest in the app.\n    let dashboards = [...this.state.dashboards];\n    const latestDashboards = await listAppDashboards();\n    for (const dashboard of latestDashboards) {\n      let i = dashboards.findIndex(item => {\n        return item.uid === dashboard.uid;\n      });\n      if (i < 0) {\n        dashboards.push(dashboard);\n      } else {\n        dashboards[i].latestVersion = dashboard.latestVersion;\n        if (!dashboards[i].version) {\n          dashboards[i].version = -1;\n        }\n      }\n    }\n    console.log(dashboards);\n    this.setState({ dashboards });\n  }\n\n  onImport = (dashboard: DashboardInfo) => async () => {\n    const { onChange } = this.props;\n    if (!onChange) {\n      return;\n    }\n    let options = { ...this.props.options };\n    const updated = await importDashboard(dashboard.json, options);\n    console.log('dashboard updated');\n    let i = options.dashboards.findIndex(item => {\n      return item.uid === updated.uid;\n    });\n    if (i < 0) {\n      options.dashboards.push(updated);\n    } else {\n      options.dashboards[i] = updated;\n    }\n\n    let dashboards = [...this.state.dashboards];\n    i = dashboards.findIndex(item => {\n      return item.uid === updated.uid;\n    });\n    if (i < 0) {\n      dashboards.push(updated);\n    } else {\n      dashboards[i] = updated;\n    }\n\n    this.setState({ dashboards });\n    return onChange(options);\n  };\n\n  onRemove = (dashboard: DashboardInfo) => async () => {\n    const { onChange } = this.props;\n    if (!onChange) {\n      return;\n    }\n    let options = { ...this.props.options };\n    await removeDashboard(dashboard);\n\n    let i = options.dashboards.findIndex(item => {\n      return item.uid === dashboard.uid;\n    });\n\n    if (i >= 0) {\n      options.dashboards.splice(i, 1);\n    }\n\n    let dashboards = [...this.state.dashboards];\n    i = dashboards.findIndex(item => {\n      return item.uid === dashboard.uid;\n    });\n    if (i >= 0) {\n      dashboards[i].version = 0;\n    }\n\n    this.setState({ dashboards });\n    return onChange(options);\n  };\n\n  withImports(dashboard: DashboardInfo) {\n    const { checkUpdates } = this.props;\n    if (!checkUpdates) {\n      return;\n    }\n    function buttonText(dashboard: DashboardInfo) {\n      return (dashboard.latestVersion || 0) > (dashboard.version || 0) ? 'Update' : 'Re-import';\n    }\n    return (\n      <td style={{ textAlign: 'right' }}>\n        {dashboard.version === 0 ? (\n          <button className=\"btn btn-secondary btn-small\" onClick={this.onImport(dashboard)}>\n            Import\n          </button>\n        ) : (\n          <button className=\"btn btn-secondary btn-small\" onClick={this.onImport(dashboard)}>\n            {buttonText(dashboard)}\n          </button>\n        )}\n        {dashboard.version !== 0 && (\n          <button className=\"btn btn-danger btn-small\" onClick={this.onRemove(dashboard)}>\n            <Icon name=\"trash-alt\" />\n          </button>\n        )}\n      </td>\n    );\n  }\n\n  render() {\n    const { dashboards } = this.state;\n\n    return (\n      <div>\n        <h3>Dashboards:</h3>\n        <table className=\"filter-table\">\n          <tbody>\n            {dashboards.map(d => {\n              return (\n                <tr key={d.uid}>\n                  <td className=\"width-1\">\n                    <Icon name=\"apps\" />\n                  </td>\n                  <td>\n                    <a href={`d/${d.uid}/`}>{d.title}</a>\n                  </td>\n                  {this.withImports(d)}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, ChangeEvent } from 'react';\nimport { Label, Button, Input, ConfirmModal, HorizontalGroup, Collapse } from '@grafana/ui';\nimport { RegistrationInfo, HostedInstance } from 'types';\nimport { SMDataSource } from 'datasource/DataSource';\nimport { isValid } from 'datasource/ConfigEditor';\nimport { InstanceList } from './InstanceList';\nimport { createHostedInstance, findHostedInstance, getHostedLokiAndPrometheusInfo } from 'utils';\nimport { SMOptions } from 'datasource/types';\nimport { TenantView } from './TenantView';\nimport { dashboardPaths, importDashboard } from 'dashboards/loader';\nimport { DashboardList } from './DashboardList';\n\ninterface Props {\n  instance: SMDataSource;\n}\n\ninterface State {\n  showAdvanced: boolean;\n  apiHost?: string;\n  adminApiToken?: string;\n  info?: RegistrationInfo;\n  logsInstance?: number;\n  metricsInstance?: number;\n  showResetModal: boolean;\n  resetConfig: boolean;\n}\n\nexport class TenantSetup extends PureComponent<Props, State> {\n  defaultApiHost = 'https://synthetic-monitoring-api.grafana.net';\n\n  state: State = {\n    showResetModal: false,\n    resetConfig: false,\n    apiHost: this.defaultApiHost,\n    showAdvanced: false,\n  };\n\n  onInit = async () => {\n    const { instance } = this.props;\n    const { adminApiToken, apiHost } = this.state;\n    if (!adminApiToken) {\n      alert('Missing admin key');\n      return;\n    }\n    if (!apiHost) {\n      alert('Missing apiHost');\n      return;\n    }\n\n    const info = await instance.registerInit(apiHost, adminApiToken);\n    this.setState({\n      info,\n      logsInstance: info.tenantInfo?.logInstance?.id,\n      metricsInstance: info.tenantInfo?.metricInstance?.id,\n    });\n  };\n\n  onApiHostChange = (event: ChangeEvent<any>) => {\n    this.setState({ apiHost: event.target.value });\n  };\n\n  onApiTokenChange = (event: ChangeEvent<any>) => {\n    this.setState({ adminApiToken: event.target.value });\n  };\n\n  onSelectLogs = (id: number) => {\n    this.setState({ logsInstance: id });\n  };\n  onSelectMetrics = (id: number) => {\n    this.setState({ metricsInstance: id });\n  };\n\n  createDataSource = async (name: string, hosted: HostedInstance) => {\n    const { instance } = this.props;\n    const { adminApiToken } = this.state;\n    try {\n      const token = await instance.getViewerToken(adminApiToken!, hosted!);\n      if (token) {\n        return await createHostedInstance(name, hosted!, token);\n      }\n      console.error('error getting token');\n      return undefined;\n    } catch (ex) {\n      console.log('Error creating', name, hosted, ex);\n    }\n    return undefined;\n  };\n\n  onSave = async () => {\n    const { instance } = this.props;\n    const { info, adminApiToken, apiHost } = this.state;\n    const name = instance?.instanceSettings.name;\n\n    const hostedMetrics = info?.instances.find(i => i.id === this.state.metricsInstance);\n    const hostedLogs = info?.instances.find(i => i.id === this.state.logsInstance);\n\n    if (!hostedMetrics) {\n      alert('Missing metrics instance');\n      return;\n    }\n\n    if (!hostedLogs) {\n      alert('Missing logs instance');\n      return;\n    }\n\n    if (!apiHost) {\n      alert('Missing apiHost');\n      return;\n    }\n\n    const known = await getHostedLokiAndPrometheusInfo();\n\n    let metrics = findHostedInstance(known, hostedMetrics);\n    if (!metrics) {\n      metrics = await this.createDataSource(`${name} Metrics`, hostedMetrics!);\n    }\n\n    let logs = findHostedInstance(known, hostedLogs);\n    if (!logs) {\n      logs = await this.createDataSource(`${name} Logs`, hostedLogs!);\n    }\n\n    const options: SMOptions = {\n      apiHost: apiHost,\n      logs: {\n        grafanaName: logs!.name,\n        hostedId: hostedLogs.id,\n      },\n      metrics: {\n        grafanaName: metrics!.name,\n        hostedId: hostedMetrics.id,\n      },\n      dashboards: [],\n    };\n\n    // Save the dashboard names\n    for (const json of dashboardPaths) {\n      const d = await importDashboard(json, options);\n      options.dashboards.push(d);\n    }\n    await instance!.registerSave(adminApiToken!, options, info?.accessToken!);\n\n    // force reload so that GrafanaBootConfig is updated.\n    window.location.reload();\n  };\n\n  onToggleAdvanced = (isOpen: boolean) => {\n    this.setState({ showAdvanced: !this.state.showAdvanced });\n  };\n\n  renderSetup() {\n    const { info, adminApiToken, apiHost, logsInstance, metricsInstance, showAdvanced } = this.state;\n\n    if (!info) {\n      return (\n        <div>\n          <HorizontalGroup wrap={true}>\n            <Label>Admin API Key</Label>\n\n            <Input\n              type=\"text\"\n              width={100}\n              placeholder=\"Grafana.com Admin Api Key\"\n              value={adminApiToken || ''}\n              onChange={this.onApiTokenChange}\n            />\n          </HorizontalGroup>\n          <br />\n          <Collapse label=\"Advanced\" collapsible={true} onToggle={this.onToggleAdvanced} isOpen={showAdvanced}>\n            <HorizontalGroup>\n              <Label>Backend Address</Label>\n\n              <Input\n                type=\"text\"\n                width={40}\n                placeholder=\"Synthetic Monitoring Backend Address\"\n                value={apiHost || this.defaultApiHost}\n                onChange={this.onApiHostChange}\n              />\n            </HorizontalGroup>\n          </Collapse>\n          <Button variant=\"primary\" onClick={this.onInit}>\n            Initalize\n          </Button>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>Select the Grafana Cloud instances Synthetic Monitoring will send data to</div>\n\n        <h4>Metrics</h4>\n        <InstanceList\n          instances={info.instances.filter(f => f.type === 'prometheus')}\n          onSelected={this.onSelectMetrics}\n          selected={metricsInstance!}\n        />\n\n        <h4>Logs</h4>\n        <InstanceList\n          instances={info.instances.filter(f => f.type === 'logs')}\n          onSelected={this.onSelectLogs}\n          selected={logsInstance!}\n        />\n        <br />\n        <br />\n        <Button variant=\"primary\" onClick={this.onSave}>\n          Setup\n        </Button>\n      </div>\n    );\n  }\n\n  showResetModal = (show: boolean) => () => {\n    this.setState({ showResetModal: show });\n  };\n\n  onReset = () => {\n    this.setState({ resetConfig: true });\n  };\n\n  onOptionsChange = (options: SMOptions) => {\n    const { instance } = this.props;\n    return instance.onOptionsChange(options);\n  };\n\n  render() {\n    const { instance } = this.props;\n    if (!instance) {\n      return <div>Loading...</div>;\n    }\n    const { showResetModal, resetConfig } = this.state;\n\n    if (!isValid(instance.instanceSettings?.jsonData) || resetConfig) {\n      return this.renderSetup();\n    }\n\n    return (\n      <div>\n        <DashboardList\n          options={instance.instanceSettings.jsonData}\n          checkUpdates={true}\n          onChange={this.onOptionsChange}\n        />\n        <br />\n        <TenantView settings={instance.instanceSettings.jsonData} />\n        <Button variant=\"destructive\" onClick={this.showResetModal(true)}>\n          Reset\n        </Button>\n        <ConfirmModal\n          isOpen={showResetModal}\n          title=\"Reset Configuration\"\n          body=\"Are you sure you want to reset the configuration?\"\n          confirmText=\"Reset Configuration\"\n          onConfirm={this.onReset}\n          onDismiss={this.showResetModal(false)}\n        />\n      </div>\n    );\n  }\n}\n","import { Check, CheckType, Settings, HttpSettings, PingSettings, DnsSettings, TcpSettings, Label } from 'types';\nimport { checkType } from 'utils';\n\nexport const CheckValidation = {\n  job: validateJob,\n  target: validateTarget,\n  frequency: validateFrequency,\n  timeout: validateTimeout,\n  labels: validateLabels,\n  settings: validateSettings,\n  probes: validateProbes,\n};\n\nexport function validateCheck(check: Check): boolean {\n  return (\n    CheckValidation.job(check.job) &&\n    CheckValidation.target(checkType(check.settings), check.target) &&\n    CheckValidation.frequency(check.frequency) &&\n    CheckValidation.timeout(check.timeout) &&\n    CheckValidation.labels(check.labels) &&\n    CheckValidation.settings(check.settings) &&\n    CheckValidation.probes(check.probes)\n  );\n}\n\nexport function validateJob(job: string): boolean {\n  return job.length > 0 && job.length <= 32;\n}\n\nexport function validateTarget(typeOfCheck: CheckType, target: string): boolean {\n  if (!(target.length > 0 && target.length <= 64)) {\n    return false;\n  }\n\n  switch (typeOfCheck) {\n    case CheckType.HTTP: {\n      return validateHttpTarget(target);\n    }\n    default: {\n      return true;\n    }\n  }\n}\n\nexport function validateFrequency(freq: number): boolean {\n  return freq >= 10000 && freq <= 120000;\n}\n\nexport function validateTimeout(t: number): boolean {\n  return t >= 1000 && t <= 10000;\n}\n\nexport function validateLabels(labels: Label[]): boolean {\n  if (labels.length < 0 || labels.length > 5) {\n    return false;\n  }\n  // validate each label\n  for (const l of labels) {\n    if (!validateLabel(l)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst labelRegex = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n\nexport function validateLabel(label: Label): boolean {\n  return validateLabelName(label.name) && validateLabelValue(label.value);\n}\n\nexport function validateLabelName(name: string): boolean {\n  if (name.length < 1 || name.length > 32) {\n    return false;\n  }\n\n  return labelRegex.test(name);\n}\n\nexport function validateLabelValue(value: string): boolean {\n  return value.length > 0 && value.length <= 32;\n}\n\nexport function validateSettings(settings: Settings): boolean {\n  let checkT = checkType(settings);\n  if (!settings[checkT]) {\n    return false;\n  }\n\n  switch (checkT) {\n    case CheckType.HTTP: {\n      return validateSettingsHTTP(settings.http!);\n    }\n    case CheckType.PING: {\n      return validateSettingsPING(settings.ping!);\n    }\n    case CheckType.DNS: {\n      return validateSettingsDNS(settings.dns!);\n    }\n    case CheckType.TCP: {\n      return validateSettingsTCP(settings.tcp!);\n    }\n  }\n}\n\nexport function validateProbes(probes: number[]): boolean {\n  return probes.length > 0 && probes.length <= 64;\n}\n\nexport function validateSettingsHTTP(settings: HttpSettings): boolean {\n  return true;\n}\n\nexport function validateSettingsPING(settings: PingSettings): boolean {\n  return true;\n}\n\nexport function validateSettingsDNS(settings: DnsSettings): boolean {\n  return true;\n}\n\nexport function validateSettingsTCP(settings: TcpSettings): boolean {\n  return true;\n}\n\nfunction validateHttpTarget(target: string): boolean {\n  try {\n    let url = new URL(target);\n    return url.protocol === 'https:' || url.protocol === 'http:';\n  } catch (_) {\n    return false;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Icon, IconButton, HorizontalGroup, List, Input, VerticalGroup, Button } from '@grafana/ui';\nimport { Label as SMLabel, IpVersion } from 'types';\nimport * as Validation from 'validation';\n\ninterface LabelsProps {\n  labels: SMLabel[];\n  isEditor: boolean;\n  type: string;\n  limit: number;\n  onUpdate: (labels: SMLabel[]) => void;\n}\n\ninterface LabelsState {\n  labels: SMLabel[];\n  numLabels: number;\n}\n\nexport class SMLabelsForm extends PureComponent<LabelsProps, LabelsState> {\n  state = {\n    labels: this.props.labels || [],\n    numLabels: this.props.labels.length,\n  };\n\n  addLabel = () => {\n    let labels = this.state.labels;\n    console.log('adding new label', labels);\n    const n = labels.push({ name: '', value: '' });\n\n    this.setState({ labels: labels, numLabels: n }, this.onUpdate);\n  };\n\n  onDelete = (index: number) => {\n    let labels = this.state.labels;\n    labels.splice(index, 1);\n    this.setState({ labels: labels, numLabels: labels.length }, this.onUpdate);\n  };\n\n  onUpdate = () => {\n    this.props.onUpdate(this.state.labels);\n  };\n\n  onChange = (index: number, label: SMLabel) => {\n    let labels = this.state.labels;\n    labels[index] = label;\n    this.setState({ labels: labels }, this.onUpdate);\n  };\n\n  render() {\n    const { labels } = this.state;\n    const { isEditor, limit } = this.props;\n    return (\n      <VerticalGroup justify=\"space-between\">\n        <List\n          items={labels}\n          renderItem={(item, index) => (\n            <SMLabelForm\n              onDelete={this.onDelete}\n              onChange={this.onChange}\n              label={item}\n              index={index}\n              isEditor={isEditor}\n            />\n          )}\n        />\n        {labels.length < limit && (\n          <Button onClick={this.addLabel} disabled={!isEditor} variant=\"secondary\" size=\"sm\">\n            <Icon name=\"plus\" />\n            &nbsp; Add {this.props.type}\n          </Button>\n        )}\n      </VerticalGroup>\n    );\n  }\n}\n\ninterface LabelProps {\n  label: SMLabel;\n  index: number;\n  isEditor: boolean;\n  onDelete: (index: number) => void;\n  onChange: (index: number, label: SMLabel) => void;\n}\n\ninterface LabelState {\n  name: string;\n  value: string;\n}\n\nexport class SMLabelForm extends PureComponent<LabelProps, LabelState> {\n  state = {\n    name: this.props.label.name,\n    value: this.props.label.value,\n  };\n\n  componentDidUpdate(oldProps: LabelProps) {\n    const { label, index } = this.props;\n    if (label !== oldProps.label || index !== oldProps.index) {\n      this.setState({ name: this.props.label.name, value: this.props.label.value });\n    }\n  }\n\n  onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value }, this.onChange);\n  };\n\n  onValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ value: event.target.value }, this.onChange);\n  };\n\n  onDelete = () => {\n    this.props.onDelete(this.props.index);\n  };\n\n  onChange = () => {\n    this.props.onChange(this.props.index, { name: this.state.name, value: this.state.value });\n  };\n\n  render() {\n    const { name, value } = this.state;\n    const { isEditor } = this.props;\n    console.log('rendering label with name:', name);\n    return (\n      <HorizontalGroup justify=\"space-between\">\n        <Input\n          type=\"text\"\n          placeholder=\"name\"\n          value={name}\n          onChange={this.onNameChange}\n          disabled={!isEditor}\n          invalid={!Validation.validateLabelName(name)}\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"value\"\n          value={value}\n          onChange={this.onValueChange}\n          disabled={!isEditor}\n          invalid={!Validation.validateLabelValue(value)}\n        />\n        <IconButton name=\"minus-circle\" onClick={this.onDelete} disabled={!isEditor} />\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport const IpOptions = [\n  {\n    label: 'Any',\n    value: IpVersion.Any,\n  },\n  {\n    label: 'V4',\n    value: IpVersion.V4,\n  },\n  {\n    label: 'V6',\n    value: IpVersion.V6,\n  },\n];\n","import React, { PureComponent } from 'react';\nimport { Collapse, Container, HorizontalGroup, Field, Select, Switch } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { IpVersion, Settings, PingSettings } from 'types';\nimport { IpOptions } from './utils';\n\ninterface Props {\n  settings: Settings;\n  isEditor: boolean;\n  onUpdate: (settings: Settings) => void;\n}\n\ninterface State extends PingSettings {\n  showAdvanced: boolean;\n}\n\nexport class PingSettingsForm extends PureComponent<Props, State> {\n  state: State = {\n    ipVersion: this.props.settings!.ping?.ipVersion || IpVersion.V4,\n    dontFragment: this.props.settings!.ping?.dontFragment || false,\n    showAdvanced: false,\n  };\n\n  onUpdate = () => {\n    const settings = this.state as PingSettings;\n    this.props.onUpdate({\n      ping: settings,\n    });\n  };\n\n  onIpVersionChange = (value: SelectableValue<IpVersion>) => {\n    this.setState({ ipVersion: value.value || IpVersion.Any }, this.onUpdate);\n  };\n\n  onDontFragmentChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ dontFragment: !this.state.dontFragment }, this.onUpdate);\n  };\n\n  onToggleOptions = (isOpen: boolean) => {\n    this.setState({ showAdvanced: !this.state.showAdvanced });\n  };\n\n  render() {\n    const { ipVersion, dontFragment, showAdvanced } = this.state;\n    const { isEditor } = this.props;\n\n    return (\n      <Container>\n        <Collapse label=\"Advanced Options\" collapsible={true} onToggle={this.onToggleOptions} isOpen={showAdvanced}>\n          <HorizontalGroup>\n            <div>\n              <Field label=\"IP Version\" description=\"The IP protocol of the ICMP request\" disabled={!isEditor}>\n                <Select value={ipVersion} options={IpOptions} onChange={this.onIpVersionChange} />\n              </Field>\n            </div>\n            <div>\n              <Field\n                label=\"Don't Fragment\"\n                description=\"Set the DF-bit in the IP-header. Only works with ipV4\"\n                disabled={!isEditor}\n              >\n                <Container padding=\"sm\">\n                  <Switch value={dontFragment} onChange={this.onDontFragmentChange} disabled={!isEditor} />\n                </Container>\n              </Field>\n            </div>\n          </HorizontalGroup>\n        </Collapse>\n      </Container>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { css } from 'emotion';\nimport { Collapse, Container, HorizontalGroup, Field, Switch, Input, VerticalGroup } from '@grafana/ui';\nimport { BasicAuth } from 'types';\n\ninterface Props {\n  bearerToken?: string;\n  basicAuth?: BasicAuth;\n  isEditor: boolean;\n  onUpdate: (bearerToken: string | undefined, basicAuth: BasicAuth | undefined) => void;\n}\n\ninterface State {\n  hasBasicAuth: boolean;\n  hasBearerToken: boolean;\n  basicAuth?: BasicAuth;\n  token?: string;\n  showAuthentication: boolean;\n}\n\nexport class AuthSettings extends PureComponent<Props, State> {\n  state: State = {\n    hasBasicAuth: false,\n    hasBearerToken: false,\n    showAuthentication: false,\n  };\n\n  componentDidMount() {\n    const { bearerToken, basicAuth } = this.props;\n    let hasBearerToken = false;\n    let hasBasicAuth = false;\n    if (bearerToken && bearerToken.length > 0) {\n      hasBearerToken = true;\n    } else if (basicAuth && (basicAuth.username.length > 0 || basicAuth.password.length > 0)) {\n      hasBasicAuth = true;\n    }\n\n    this.setState({\n      hasBasicAuth: hasBasicAuth,\n      hasBearerToken: hasBearerToken,\n      token: bearerToken,\n      basicAuth: basicAuth,\n    });\n  }\n\n  onUpdate = () => {\n    this.props.onUpdate(this.state.token, this.state.basicAuth);\n  };\n\n  onToggleAuthentication = (isOpen: boolean) => {\n    this.setState({ showAuthentication: !this.state.showAuthentication });\n  };\n\n  onBearerTokenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ token: event.target.value }, this.onUpdate);\n  };\n\n  onBasicAuthChange = (basicAuth: BasicAuth | undefined) => {\n    let { hasBasicAuth, hasBearerToken, token } = this.state;\n    if (basicAuth) {\n      hasBasicAuth = true;\n      hasBearerToken = false;\n      token = undefined;\n    } else {\n      hasBasicAuth = false;\n    }\n    this.setState({ basicAuth, hasBasicAuth, hasBearerToken, token }, this.onUpdate);\n  };\n\n  onHasBearerAuth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let { hasBasicAuth, basicAuth, hasBearerToken, token } = this.state;\n\n    if (hasBearerToken) {\n      // if hasBearerToken is set, then we are now removing BearerToken\n      token = undefined;\n    } else if (hasBasicAuth) {\n      // if we are turning on hasBearerToken, then we must turn off basicAuth\n      hasBasicAuth = false;\n      basicAuth = undefined;\n    }\n    hasBearerToken = !hasBearerToken;\n    this.setState({ hasBasicAuth, basicAuth, hasBearerToken, token }, this.onUpdate);\n  };\n\n  render() {\n    const { showAuthentication, hasBearerToken, token, basicAuth } = this.state;\n    const { isEditor } = this.props;\n\n    return (\n      <Collapse\n        label=\"Authentication\"\n        collapsible={true}\n        onToggle={this.onToggleAuthentication}\n        isOpen={showAuthentication}\n      >\n        <VerticalGroup spacing=\"xs\">\n          <Field\n            label=\"Bearer Token\"\n            description=\"Include bearer Authorization header in request\"\n            disabled={!isEditor}\n            horizontal={true}\n            className={\n              !hasBearerToken\n                ? undefined\n                : css`\n                    margin-bottom: 1px;\n                  `\n            }\n          >\n            <Container margin=\"sm\">\n              <Switch value={hasBearerToken} onChange={this.onHasBearerAuth} disabled={!isEditor} />\n            </Container>\n          </Field>\n          {hasBearerToken && (\n            <VerticalGroup>\n              <Input\n                type=\"password\"\n                placeholder=\"Bearer Token\"\n                value={token}\n                onChange={this.onBearerTokenChange}\n                disabled={!isEditor}\n              />\n              <br />\n            </VerticalGroup>\n          )}\n        </VerticalGroup>\n        <BasicAuthForm onChange={this.onBasicAuthChange} basicAuth={basicAuth} isEditor={isEditor} />\n      </Collapse>\n    );\n  }\n}\n\ninterface BasicAuthProps {\n  basicAuth?: BasicAuth;\n  isEditor: boolean;\n  onChange: (basicAuth: BasicAuth | undefined) => void;\n}\n\ninterface BasicAuthState {\n  username: string;\n  password: string;\n  hasBasicAuth: boolean;\n}\n\nexport class BasicAuthForm extends PureComponent<BasicAuthProps, BasicAuthState> {\n  state = {\n    username: this.props.basicAuth?.username || '',\n    password: this.props.basicAuth?.password || '',\n    hasBasicAuth: this.props.basicAuth ? true : false,\n  };\n\n  componentDidUpdate(oldProps: BasicAuthProps) {\n    this.setState({\n      username: this.props.basicAuth?.username || '',\n      password: this.props.basicAuth?.password || '',\n      hasBasicAuth: this.props.basicAuth ? true : false,\n    });\n  }\n\n  onUpdate = () => {\n    if (!this.state.hasBasicAuth) {\n      this.props.onChange(undefined);\n      return;\n    }\n    const auth = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.onChange(auth);\n  };\n\n  onUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ username: event.target.value }, this.onUpdate);\n  };\n\n  onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ password: event.target.value }, this.onUpdate);\n  };\n\n  onHasBasicAuth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let { hasBasicAuth, username, password } = this.state;\n\n    if (hasBasicAuth) {\n      // if hasBasicAuth is set, then we are now removing basicAuth\n      username = '';\n      password = '';\n    }\n    hasBasicAuth = !hasBasicAuth;\n    this.setState({ hasBasicAuth, username, password }, this.onUpdate);\n  };\n\n  render() {\n    const { username, password, hasBasicAuth } = this.state;\n    const { isEditor } = this.props;\n\n    return (\n      <VerticalGroup spacing=\"xs\">\n        <Field\n          label=\"Basic Auth\"\n          description=\"Include Basic Authorization header in request\"\n          disabled={!isEditor}\n          horizontal={true}\n          className={\n            !hasBasicAuth\n              ? undefined\n              : css`\n                  margin-bottom: 1px;\n                `\n          }\n        >\n          <Container margin=\"sm\">\n            <Switch value={hasBasicAuth} onChange={this.onHasBasicAuth} disabled={!isEditor} />\n          </Container>\n        </Field>\n        {hasBasicAuth && (\n          <HorizontalGroup>\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={this.onUsernameChange}\n              disabled={!isEditor}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={this.onPasswordChange}\n              disabled={!isEditor}\n            />\n          </HorizontalGroup>\n        )}\n      </VerticalGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  Collapse,\n  Container,\n  HorizontalGroup,\n  Field,\n  Select,\n  Switch,\n  MultiSelect,\n  TextArea,\n  List,\n  IconButton,\n  Input,\n  Button,\n  Icon,\n  VerticalGroup,\n} from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { IpVersion, Settings, HttpSettings, HttpMethod, HttpVersion, BasicAuth, TLSConfig, HeaderMatch } from 'types';\nimport { SMLabelsForm, IpOptions } from '../utils';\nimport { Label as SMLabel } from 'types';\nimport { AuthSettings } from './AuthSettings';\n\ninterface Props {\n  settings: Settings;\n  isEditor: boolean;\n  onUpdate: (settings: Settings) => void;\n}\n\ninterface State extends HttpSettings {\n  showAdvanced: boolean;\n  showValidation: boolean;\n  showAuthentication: boolean;\n  showTLS: boolean;\n}\n\nexport class HttpSettingsForm extends PureComponent<Props, State> {\n  state: State = {\n    method: this.props.settings.http?.method || HttpMethod.GET,\n    body: this.props.settings.http?.body,\n    headers: this.props.settings.http?.headers,\n    ipVersion: this.props.settings.http?.ipVersion || IpVersion.V4,\n    noFollowRedirects: this.props.settings.http?.noFollowRedirects || false,\n\n    // Authentication\n    bearerToken: this.props.settings.http?.bearerToken,\n    basicAuth: this.props.settings.http?.basicAuth,\n\n    // validations\n    failIfSSL: this.props.settings.http?.failIfSSL || false,\n    failIfNotSSL: this.props.settings.http?.failIfNotSSL || false,\n    validStatusCodes: this.props.settings.http?.validStatusCodes || [],\n    validHTTPVersions: this.props.settings.http?.validHTTPVersions || [],\n    failIfBodyMatchesRegexp: this.props.settings.http?.failIfBodyMatchesRegexp || [],\n    failIfBodyNotMatchesRegexp: this.props.settings.http?.failIfBodyNotMatchesRegexp || [],\n    failIfHeaderMatchesRegexp: this.props.settings.http?.failIfHeaderMatchesRegexp || [],\n    failIfHeaderNotMatchesRegexp: this.props.settings.http?.failIfHeaderNotMatchesRegexp || [],\n    cacheBustingQueryParamName: this.props.settings.http?.cacheBustingQueryParamName,\n\n    showAdvanced: false,\n    showValidation: false,\n    showAuthentication: false,\n    showTLS: false,\n  };\n\n  onUpdate = () => {\n    const settings = this.state as HttpSettings;\n    this.props.onUpdate({\n      http: settings,\n    });\n  };\n\n  onMethodChange = (value: SelectableValue<HttpMethod>) => {\n    this.setState({ method: value.value || HttpMethod.GET }, this.onUpdate);\n  };\n\n  onBodyChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ body: event.target.value }, this.onUpdate);\n  };\n\n  onIpVersionChange = (value: SelectableValue<IpVersion>) => {\n    this.setState({ ipVersion: value.value || IpVersion.Any }, this.onUpdate);\n  };\n\n  onNoFollowRedirectsChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ noFollowRedirects: !this.state.noFollowRedirects }, this.onUpdate);\n  };\n\n  onFailIfNotSSLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ failIfNotSSL: !this.state.failIfNotSSL }, this.onUpdate);\n  };\n\n  onFailIfSSLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ failIfSSL: !this.state.failIfSSL }, this.onUpdate);\n  };\n\n  onCacheBustingQueryParamNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ cacheBustingQueryParamName: event.target.value }, this.onUpdate);\n  };\n\n  onToggleAdvanced = (isOpen: boolean) => {\n    this.setState({ showAdvanced: !this.state.showAdvanced });\n  };\n\n  onToggleValidation = (isOpen: boolean) => {\n    this.setState({ showValidation: !this.state.showValidation });\n  };\n\n  onAuthUpdate = (bearerToken: string | undefined, basicAuth: BasicAuth | undefined) => {\n    this.setState({ bearerToken, basicAuth }, this.onUpdate);\n  };\n\n  onToggleTLS = (isOpen: boolean) => {\n    this.setState({ showTLS: !this.state.showTLS });\n  };\n\n  onTLSChange = (tlsConfig: TLSConfig) => {\n    this.setState({ tlsConfig: tlsConfig }, this.onUpdate);\n  };\n\n  onValidHttpVersionsChange = (item: Array<SelectableValue<HttpVersion>>) => {\n    let validHTTPVersions: HttpVersion[] = [];\n    for (const p of item.values()) {\n      if (p.value) {\n        validHTTPVersions.push(p.value);\n      }\n    }\n    this.setState({ validHTTPVersions }, this.onUpdate);\n  };\n\n  onValidStatusCodeChange = (item: Array<SelectableValue<number>>) => {\n    let validStatusCodes: number[] = [];\n    for (const p of item.values()) {\n      if (p.value) {\n        validStatusCodes.push(p.value);\n      }\n    }\n    this.setState({ validStatusCodes }, this.onUpdate);\n  };\n\n  headersToLabels(): SMLabel[] {\n    let labels: SMLabel[] = [];\n    for (const h of this.state.headers || []) {\n      const parts = h.split(':', 2);\n      labels.push({\n        name: parts[0],\n        value: parts[1],\n      });\n    }\n    return labels;\n  }\n\n  onHeadersUpdate = (labels: SMLabel[]) => {\n    let headers: string[] = [];\n    for (const l of labels) {\n      headers.push(`${l.name}: ${l.value}`);\n    }\n    this.setState({ headers }, this.onUpdate);\n  };\n\n  onFailIfBodyMatchesRegexpChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let failIfBodyMatchesRegexp: string[] = [];\n    this.state.failIfBodyMatchesRegexp?.forEach((v, i) => {\n      if (i === index) {\n        failIfBodyMatchesRegexp.push(event.target.value);\n      } else {\n        failIfBodyMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfBodyMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfBodyMatchesRegexpDelete = (index: number) => () => {\n    let failIfBodyMatchesRegexp: string[] = [];\n    this.state.failIfBodyMatchesRegexp?.forEach((v, i) => {\n      if (i !== index) {\n        failIfBodyMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfBodyMatchesRegexp }, this.onUpdate);\n  };\n\n  addFailIfBodyMatchesRegexp = () => {\n    let failIfBodyMatchesRegexp: string[] = [];\n    for (const v of this.state.failIfBodyMatchesRegexp || []) {\n      failIfBodyMatchesRegexp.push(v);\n    }\n    failIfBodyMatchesRegexp.push('');\n    this.setState({ failIfBodyMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfBodyNotMatchesRegexpChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let failIfBodyNotMatchesRegexp: string[] = [];\n    this.state.failIfBodyNotMatchesRegexp?.forEach((v, i) => {\n      if (i === index) {\n        failIfBodyNotMatchesRegexp.push(event.target.value);\n      } else {\n        failIfBodyNotMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfBodyNotMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfBodyNotMatchesRegexpDelete = (index: number) => () => {\n    let failIfBodyNotMatchesRegexp: string[] = [];\n    this.state.failIfBodyNotMatchesRegexp?.forEach((v, i) => {\n      if (i !== index) {\n        failIfBodyNotMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfBodyNotMatchesRegexp }, this.onUpdate);\n  };\n\n  addFailIfBodyNotMatchesRegexp = () => {\n    let failIfBodyNotMatchesRegexp: string[] = [];\n    for (const v of this.state.failIfBodyNotMatchesRegexp || []) {\n      failIfBodyNotMatchesRegexp.push(v);\n    }\n    failIfBodyNotMatchesRegexp.push('');\n    this.setState({ failIfBodyNotMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfHeaderMatchesUpdate = (headerMatches: HeaderMatch[]) => {\n    let matches: HeaderMatch[] = [];\n    if (!this.state.failIfHeaderMatchesRegexp) {\n      matches = headerMatches;\n    } else {\n      headerMatches.forEach(v => {\n        matches.push(v);\n      });\n    }\n    console.log('setting failIfHeaderMatchesRegexp', matches);\n    this.setState({ failIfHeaderMatchesRegexp: matches }, this.onUpdate);\n  };\n\n  onFailIfHeaderNotMatchesUpdate = (headerMatches: HeaderMatch[]) => {\n    let matches: HeaderMatch[] = [];\n    if (!this.state.failIfHeaderNotMatchesRegexp) {\n      matches = headerMatches;\n    } else {\n      headerMatches.forEach(v => {\n        matches.push(v);\n      });\n    }\n    this.setState({ failIfHeaderNotMatchesRegexp: matches }, this.onUpdate);\n  };\n\n  generateValidStatusCodes() {\n    let validCodes = [];\n    for (let i = 100; i <= 102; i++) {\n      validCodes.push({\n        label: `${i}`,\n        value: i,\n      });\n    }\n    for (let i = 200; i <= 208; i++) {\n      validCodes.push({\n        label: `${i}`,\n        value: i,\n      });\n    }\n    for (let i = 300; i <= 308; i++) {\n      validCodes.push({\n        label: `${i}`,\n        value: i,\n      });\n    }\n    for (let i = 400; i <= 418; i++) {\n      validCodes.push({\n        label: `${i}`,\n        value: i,\n      });\n    }\n    validCodes.push({\n      label: '422',\n      value: 422,\n    });\n    validCodes.push({\n      label: '426',\n      value: 426,\n    });\n    validCodes.push({\n      label: '428',\n      value: 428,\n    });\n    validCodes.push({\n      label: '429',\n      value: 429,\n    });\n    validCodes.push({\n      label: '431',\n      value: 431,\n    });\n    for (let i = 500; i <= 511; i++) {\n      validCodes.push({\n        label: `${i}`,\n        value: i,\n      });\n    }\n    validCodes.push({\n      label: '598',\n      value: 598,\n    });\n    validCodes.push({\n      label: '599',\n      value: 599,\n    });\n    return validCodes;\n  }\n\n  render() {\n    const { state } = this;\n    const { isEditor } = this.props;\n\n    const httpVersionOptions = [\n      {\n        label: 'HTTP/1.0',\n        value: HttpVersion.HTTP1_0,\n      },\n      {\n        label: 'HTTP/1.1',\n        value: HttpVersion.HTTP1_1,\n      },\n      {\n        label: 'HTTP/2',\n        value: HttpVersion.HTTP2_0,\n      },\n    ];\n    const methodOptions = [\n      {\n        label: 'GET',\n        value: HttpMethod.GET,\n      },\n      {\n        label: 'HEAD',\n        value: HttpMethod.HEAD,\n      },\n      {\n        label: 'PUT',\n        value: HttpMethod.PUT,\n      },\n      {\n        label: 'POST',\n        value: HttpMethod.POST,\n      },\n      {\n        label: 'DELETE',\n        value: HttpMethod.DELETE,\n      },\n      {\n        label: 'OPTIONS',\n        value: HttpMethod.OPTIONS,\n      },\n    ];\n    const validStatusCodes = this.generateValidStatusCodes();\n\n    return (\n      <Container>\n        <HorizontalGroup>\n          <Field label=\"Request Method\" description=\"The HTTP method the probe will use\" disabled={!isEditor}>\n            <Select value={state.method} options={methodOptions} onChange={this.onMethodChange} />\n          </Field>\n        </HorizontalGroup>\n        <Container>\n          <Field label=\"Request Body\" description=\"The body of the HTTP request used in probe.\" disabled={!isEditor}>\n            <div>\n              <TextArea value={state.body} onChange={this.onBodyChange} rows={2} disabled={!isEditor} />\n            </div>\n          </Field>\n        </Container>\n        <Container>\n          <Field label=\"Request Headers\" description=\"The HTTP headers set for the probe..\" disabled={!isEditor}>\n            <div>\n              <SMLabelsForm\n                labels={this.headersToLabels()}\n                isEditor={isEditor}\n                onUpdate={this.onHeadersUpdate}\n                type=\"Header\"\n                limit={10}\n              />\n            </div>\n          </Field>\n        </Container>\n        <br />\n        <Collapse label=\"TLS Config\" collapsible={true} onToggle={this.onToggleTLS} isOpen={state.showTLS}>\n          <TLSForm onChange={this.onTLSChange} isEditor={isEditor} tlsConfig={state.tlsConfig} />\n        </Collapse>\n        <AuthSettings\n          isEditor={isEditor}\n          basicAuth={state.basicAuth}\n          bearerToken={state.bearerToken}\n          onUpdate={this.onAuthUpdate}\n        />\n        <Collapse\n          label=\"Validation\"\n          collapsible={true}\n          onToggle={this.onToggleValidation}\n          isOpen={state.showValidation}\n        >\n          <HorizontalGroup>\n            <Field\n              label=\"Valid Status Codes\"\n              description=\"Accepted status codes for this probe. Defaults to 2xx.\"\n              disabled={!isEditor}\n            >\n              <MultiSelect\n                options={validStatusCodes}\n                value={state.validStatusCodes}\n                onChange={this.onValidStatusCodeChange}\n                disabled={!isEditor}\n              />\n            </Field>\n            <Field label=\"Valid HTTP Versions\" description=\"Accepted HTTP versions for this probe\" disabled={!isEditor}>\n              <MultiSelect\n                options={httpVersionOptions}\n                value={state.validHTTPVersions}\n                onChange={this.onValidHttpVersionsChange}\n                disabled={!isEditor}\n              />\n            </Field>\n\n            <Field label=\"Fail if SSL\" description=\"Probe fails if SSL is present\" disabled={!isEditor}>\n              <Container padding=\"sm\">\n                <Switch value={state.failIfSSL} onChange={this.onFailIfSSLChange} disabled={!isEditor} />\n              </Container>\n            </Field>\n            <Field label=\"Fail if not SSL\" description=\"Probe fails if SSL is not present\" disabled={!isEditor}>\n              <Container padding=\"sm\">\n                <Switch value={state.failIfNotSSL} onChange={this.onFailIfNotSSLChange} disabled={!isEditor} />\n              </Container>\n            </Field>\n          </HorizontalGroup>\n\n          <Field\n            label=\"Fail if body matches regexp\"\n            description=\"Probe fails if response body matches regex\"\n            disabled={!isEditor}\n          >\n            <VerticalGroup justify=\"space-between\">\n              <List\n                items={state.failIfBodyMatchesRegexp || []}\n                renderItem={(item, index) => (\n                  <HorizontalGroup>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"regexp\"\n                      value={item}\n                      onChange={this.onFailIfBodyMatchesRegexpChange(index)}\n                      disabled={!isEditor}\n                    />\n                    <IconButton\n                      name=\"minus-circle\"\n                      onClick={this.onFailIfBodyMatchesRegexpDelete(index)}\n                      disabled={!isEditor}\n                    />\n                  </HorizontalGroup>\n                )}\n              />\n              <Button onClick={this.addFailIfBodyMatchesRegexp} disabled={!isEditor} variant=\"secondary\" size=\"sm\">\n                <Icon name=\"plus\" />\n                &nbsp; Add Body Regexp\n              </Button>\n            </VerticalGroup>\n          </Field>\n          <Field\n            label=\"Fail if body doesn't match regexp\"\n            description=\"Probe fails if response body does not match regex\"\n            disabled={!isEditor}\n          >\n            <VerticalGroup justify=\"space-between\">\n              <List\n                items={state.failIfBodyNotMatchesRegexp || []}\n                renderItem={(item, index) => (\n                  <HorizontalGroup>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"regexp\"\n                      value={item}\n                      onChange={this.onFailIfBodyNotMatchesRegexpChange(index)}\n                      disabled={!isEditor}\n                    />\n                    <IconButton\n                      name=\"minus-circle\"\n                      onClick={this.onFailIfBodyNotMatchesRegexpDelete(index)}\n                      disabled={!isEditor}\n                    />\n                  </HorizontalGroup>\n                )}\n              />\n              <Button onClick={this.addFailIfBodyNotMatchesRegexp} disabled={!isEditor} variant=\"secondary\" size=\"sm\">\n                <Icon name=\"plus\" />\n                &nbsp; Add Body Regexp\n              </Button>\n            </VerticalGroup>\n          </Field>\n          <HeaderMatchForm\n            headerMatches={state.failIfHeaderMatchesRegexp || []}\n            name=\"Fail if header matches regexp\"\n            description=\"Probe fails if response header matches regex. For headers with multiple values, fails if *at least one* matches\"\n            onChange={this.onFailIfHeaderMatchesUpdate}\n            isEditor={isEditor}\n          />\n          <HeaderMatchForm\n            headerMatches={state.failIfHeaderNotMatchesRegexp || []}\n            name=\"Fail if header doesn't match regexp\"\n            description=\"Probe fails if response header does not match regex. For headers with multiple values, fails if *none* match.\"\n            onChange={this.onFailIfHeaderNotMatchesUpdate}\n            isEditor={isEditor}\n          />\n        </Collapse>\n        <Collapse\n          label=\"Advanced Options\"\n          collapsible={true}\n          onToggle={this.onToggleAdvanced}\n          isOpen={state.showAdvanced}\n        >\n          <HorizontalGroup>\n            <div>\n              <Field label=\"IP Version\" description=\"The IP protocol of the HTTP request\" disabled={!isEditor}>\n                <Select value={state.ipVersion} options={IpOptions} onChange={this.onIpVersionChange} />\n              </Field>\n            </div>\n            <div>\n              <Field\n                label=\"Follow Redirects\"\n                description=\"Whether or not the probe will follow any redirects.\"\n                disabled={!isEditor}\n              >\n                <Container padding=\"sm\">\n                  <Switch\n                    value={!state.noFollowRedirects}\n                    onChange={this.onNoFollowRedirectsChange}\n                    disabled={!isEditor}\n                  />\n                </Container>\n              </Field>\n            </div>\n          </HorizontalGroup>\n          <HorizontalGroup>\n            <div>\n              <Field\n                label=\"Cache busting query parameter name\"\n                description=\"The name of the query parameter used to prevent the server from using a cached response. Each probe will assign a random value to this parameter each time a request is made.\"\n              >\n                <Input\n                  type=\"string\"\n                  placeholder=\"cache-bust\"\n                  value={state.cacheBustingQueryParamName}\n                  onChange={this.onCacheBustingQueryParamNameChange}\n                  disabled={!isEditor}\n                />\n              </Field>\n            </div>\n          </HorizontalGroup>\n        </Collapse>\n      </Container>\n    );\n  }\n}\n\ninterface TLSProps {\n  tlsConfig?: TLSConfig;\n  isEditor: boolean;\n  onChange: (tlsConfig: TLSConfig) => void;\n}\n\ninterface TLSState {\n  insecureSkipVerify: boolean;\n  caCert: string;\n  clientCert: string;\n  clientKey: string;\n  serverName: string;\n}\n\nexport class TLSForm extends PureComponent<TLSProps, TLSState> {\n  state = {\n    insecureSkipVerify: this.props.tlsConfig?.insecureSkipVerify || false,\n    caCert: this.props.tlsConfig?.caCert || '',\n    clientCert: this.props.tlsConfig?.clientCert || '',\n    clientKey: this.props.tlsConfig?.clientKey || '',\n    serverName: this.props.tlsConfig?.serverName || '',\n  };\n\n  onUpdate = () => {\n    const cfg = {\n      insecureSkipVerify: this.state.insecureSkipVerify,\n      caCert: this.state.caCert,\n      clientCert: this.state.clientCert,\n      clientKey: this.state.clientKey,\n      serverName: this.state.serverName,\n    };\n    this.props.onChange(cfg);\n  };\n\n  onInsecureSkipVerifyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ insecureSkipVerify: !this.state.insecureSkipVerify }, this.onUpdate);\n  };\n\n  onServerNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ serverName: event.target.value }, this.onUpdate);\n  };\n\n  onCACertChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ caCert: event.target.value }, this.onUpdate);\n  };\n  onClientCertChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ clientCert: event.target.value }, this.onUpdate);\n  };\n  onClientKeyChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ clientKey: event.target.value }, this.onUpdate);\n  };\n\n  render() {\n    const { insecureSkipVerify, caCert, clientCert, clientKey, serverName } = this.state;\n    const { isEditor } = this.props;\n\n    return (\n      <div>\n        <HorizontalGroup>\n          <Field label=\"Skip Validation\" description=\"Disable target certificate validation\" disabled={!isEditor}>\n            <Container padding=\"sm\">\n              <Switch value={insecureSkipVerify} onChange={this.onInsecureSkipVerifyChange} disabled={!isEditor} />\n            </Container>\n          </Field>\n          <Field label=\"Server Name\" description=\"Used to verify the hostname for the targets\" disabled={!isEditor}>\n            <Input\n              type=\"text\"\n              placeholder=\"ServerName\"\n              value={serverName}\n              onChange={this.onServerNameChange}\n              disabled={!isEditor}\n            />\n          </Field>\n        </HorizontalGroup>\n        <Container>\n          <Field label=\"CA Certificate\" description=\"The CA cert to use for the targets\" disabled={!isEditor}>\n            <div>\n              <TextArea\n                value={caCert}\n                onChange={this.onCACertChange}\n                rows={2}\n                disabled={!isEditor}\n                placeholder=\"CA Certificate\"\n              />\n            </div>\n          </Field>\n        </Container>\n        <Container>\n          <Field label=\"Client Certificate\" description=\"The client cert file for the targets\" disabled={!isEditor}>\n            <div>\n              <TextArea\n                value={clientCert}\n                onChange={this.onClientCertChange}\n                rows={2}\n                disabled={!isEditor}\n                placeholder=\"Client Certificate\"\n              />\n            </div>\n          </Field>\n        </Container>\n        <Container>\n          <Field label=\"Client Key\" description=\"The client key file for the targets\" disabled={!isEditor}>\n            <div>\n              <TextArea\n                type=\"password\"\n                value={clientKey}\n                onChange={this.onClientKeyChange}\n                rows={2}\n                disabled={!isEditor}\n                placeholder=\"Client Key\"\n              />\n            </div>\n          </Field>\n        </Container>\n      </div>\n    );\n  }\n}\n\ninterface HeaderMatchProps {\n  headerMatches: HeaderMatch[];\n  name: string;\n  description: string;\n  isEditor: boolean;\n  onChange: (headerMatches: HeaderMatch[]) => void;\n}\n\ninterface HeaderMatchState {\n  headerMatches: HeaderMatch[];\n}\n\nexport class HeaderMatchForm extends PureComponent<HeaderMatchProps, HeaderMatchState> {\n  state = {\n    headerMatches: this.props.headerMatches,\n  };\n\n  onUpdate = () => {\n    this.props.onChange(this.state.headerMatches);\n  };\n\n  onHeaderChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let matches: HeaderMatch[] = [];\n    this.state.headerMatches.forEach((v, i) => {\n      if (i === index) {\n        matches.push({\n          header: event.target.value,\n          regexp: v.regexp,\n          allowMissing: v.allowMissing,\n        });\n      } else {\n        matches.push(v);\n      }\n    });\n    this.setState({ headerMatches: matches }, this.onUpdate);\n  };\n\n  onRegexpChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let matches: HeaderMatch[] = [];\n    this.state.headerMatches.forEach((v, i) => {\n      if (i === index) {\n        matches.push({\n          header: v.header,\n          regexp: event.target.value,\n          allowMissing: v.allowMissing,\n        });\n      } else {\n        matches.push(v);\n      }\n    });\n    this.setState({ headerMatches: matches }, this.onUpdate);\n  };\n\n  onAllowMissingChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let matches: HeaderMatch[] = [];\n    this.state.headerMatches.forEach((v, i) => {\n      if (i === index) {\n        matches.push({\n          header: v.header,\n          regexp: v.regexp,\n          allowMissing: !v.allowMissing,\n        });\n      } else {\n        matches.push(v);\n      }\n    });\n    this.setState({ headerMatches: matches }, this.onUpdate);\n  };\n\n  onHeaderMatchesDelete = (index: number) => () => {\n    let matches: HeaderMatch[] = [];\n    this.state.headerMatches?.forEach((v, i) => {\n      if (i !== index) {\n        matches.push(v);\n      }\n    });\n    this.setState({ headerMatches: matches }, this.onUpdate);\n  };\n\n  onHeaderMatchesAdd = () => {\n    let matches: HeaderMatch[] = [];\n    this.state.headerMatches.forEach(v => {\n      matches.push(v);\n    });\n    matches.push({\n      header: '',\n      regexp: '',\n      allowMissing: false,\n    });\n    this.setState({ headerMatches: matches }, this.onUpdate);\n  };\n\n  render() {\n    const { headerMatches } = this.state;\n    const { isEditor, name, description } = this.props;\n\n    return (\n      <Field label={name} description={description} disabled={!isEditor}>\n        <VerticalGroup justify=\"space-between\">\n          <List\n            items={headerMatches}\n            renderItem={(item, index) => (\n              <HorizontalGroup>\n                <Input\n                  type=\"text\"\n                  placeholder=\"header\"\n                  value={item.header}\n                  onChange={this.onHeaderChange(index)}\n                  disabled={!isEditor}\n                />\n                <Input\n                  type=\"text\"\n                  placeholder=\"regexp\"\n                  value={item.regexp}\n                  onChange={this.onRegexpChange(index)}\n                  disabled={!isEditor}\n                />\n                <HorizontalGroup>\n                  <span>Allow Missing</span>\n                  <Container padding=\"sm\">\n                    <Switch\n                      title=\"Allow Missing\"\n                      value={item.allowMissing}\n                      onChange={this.onAllowMissingChange(index)}\n                      disabled={!isEditor}\n                    />\n                  </Container>\n                </HorizontalGroup>\n                <IconButton name=\"minus-circle\" onClick={this.onHeaderMatchesDelete(index)} disabled={!isEditor} />\n              </HorizontalGroup>\n            )}\n          />\n          <Button onClick={this.onHeaderMatchesAdd} disabled={!isEditor} variant=\"secondary\" size=\"sm\">\n            <Icon name=\"plus\" />\n            &nbsp; Add Header Regexp\n          </Button>\n        </VerticalGroup>\n      </Field>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Collapse, Container, HorizontalGroup, Field, Select, MultiSelect, Input, List, IconButton } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { IpVersion, Settings, DnsSettings, DnsProtocol, DnsRecordType, DNSRRValidator } from 'types';\nimport { IpOptions } from './utils';\n\ninterface Props {\n  settings: Settings;\n  isEditor: boolean;\n  onUpdate: (settings: Settings) => void;\n}\n\ninterface State extends DnsSettings {\n  showAdvanced: boolean;\n  showValidation: boolean;\n}\n\nexport class DnsSettingsForm extends PureComponent<Props, State> {\n  state: State = {\n    showValidation: false,\n    showAdvanced: false,\n    recordType: this.props.settings!.dns?.recordType || DnsRecordType.A,\n    server: this.props.settings!.dns?.server || '8.8.8.8',\n    ipVersion: this.props.settings!.dns?.ipVersion || IpVersion.V4,\n    protocol: this.props.settings!.dns?.protocol || DnsProtocol.UDP,\n    port: this.props.settings!.dns?.port || 53,\n\n    // validation\n    validRCodes: this.props.settings!.dns?.validRCodes || [],\n    validateAnswerRRS: this.props.settings!.dns?.validateAnswerRRS,\n    validateAuthorityRRS: this.props.settings!.dns?.validateAuthorityRRS,\n    validateAdditionalRRS: this.props.settings!.dns?.validateAdditionalRRS,\n  };\n\n  onUpdate = () => {\n    const settings = this.state as DnsSettings;\n    this.props.onUpdate({\n      dns: settings,\n    });\n  };\n\n  onIpVersionChange = (value: SelectableValue<IpVersion>) => {\n    this.setState({ ipVersion: value.value || IpVersion.Any }, this.onUpdate);\n  };\n\n  onProtocolChange = (value: SelectableValue<DnsProtocol>) => {\n    this.setState({ protocol: value.value || DnsProtocol.UDP }, this.onUpdate);\n  };\n\n  onPortChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ port: event.target.valueAsNumber || 53 }, this.onUpdate);\n  };\n\n  onServerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ server: event.target.value }, this.onUpdate);\n  };\n\n  onRecordTypeChange = (value: SelectableValue<DnsRecordType>) => {\n    this.setState({ recordType: value.value || DnsRecordType.A }, this.onUpdate);\n  };\n\n  onShowAdvanced = (isOpen: boolean) => {\n    this.setState({ showAdvanced: !this.state.showAdvanced });\n  };\n\n  onShowValidation = (isOpen: boolean) => {\n    this.setState({ showValidation: !this.state.showValidation });\n  };\n\n  onValidRCodesChange = (item: Array<SelectableValue<string>>) => {\n    let validRCodes: string[] = [];\n    for (const p of item.values()) {\n      if (p.value) {\n        validRCodes.push(p.value);\n      }\n    }\n    this.setState({ validRCodes }, this.onUpdate);\n  };\n\n  onValidateAnswerChange = (validations: DNSRRValidator | undefined) => {\n    console.log('validateAnswer update.', validations);\n    if (!validations) {\n      this.setState({ validateAnswerRRS: undefined }, this.onUpdate);\n      return;\n    }\n    const validateAnswerRRS = {\n      failIfMatchesRegexp: validations.failIfMatchesRegexp,\n      failIfNotMatchesRegexp: validations.failIfNotMatchesRegexp,\n    };\n    this.setState({ validateAnswerRRS }, this.onUpdate);\n  };\n\n  onValidateAuthorityChange = (validations: DNSRRValidator | undefined) => {\n    if (!validations) {\n      this.setState({ validateAuthorityRRS: undefined }, this.onUpdate);\n      return;\n    }\n    const validateAuthorityRRS = {\n      failIfMatchesRegexp: validations.failIfMatchesRegexp,\n      failIfNotMatchesRegexp: validations.failIfNotMatchesRegexp,\n    };\n    this.setState({ validateAuthorityRRS }, this.onUpdate);\n  };\n\n  onValidateAdditionalChange = (validations: DNSRRValidator | undefined) => {\n    if (!validations) {\n      this.setState({ validateAdditionalRRS: undefined }, this.onUpdate);\n      return;\n    }\n    const validateAdditionalRRS = {\n      failIfMatchesRegexp: validations.failIfMatchesRegexp,\n      failIfNotMatchesRegexp: validations.failIfNotMatchesRegexp,\n    };\n    this.setState({ validateAdditionalRRS }, this.onUpdate);\n  };\n\n  render() {\n    const {\n      ipVersion,\n      recordType,\n      server,\n      port,\n      protocol,\n      showAdvanced,\n      showValidation,\n      validRCodes,\n      validateAnswerRRS,\n      validateAuthorityRRS,\n      validateAdditionalRRS,\n    } = this.state;\n    const { isEditor } = this.props;\n\n    const recordTypes = [\n      {\n        label: DnsRecordType.A,\n        value: DnsRecordType.A,\n      },\n      {\n        label: DnsRecordType.AAAA,\n        value: DnsRecordType.AAAA,\n      },\n      {\n        label: DnsRecordType.CNAME,\n        value: DnsRecordType.CNAME,\n      },\n      {\n        label: DnsRecordType.MX,\n        value: DnsRecordType.MX,\n      },\n      {\n        label: DnsRecordType.NS,\n        value: DnsRecordType.NS,\n      },\n      {\n        label: DnsRecordType.SOA,\n        value: DnsRecordType.SOA,\n      },\n      {\n        label: DnsRecordType.TXT,\n        value: DnsRecordType.TXT,\n      },\n      {\n        label: DnsRecordType.PTR,\n        value: DnsRecordType.PTR,\n      },\n      {\n        label: DnsRecordType.SRV,\n        value: DnsRecordType.SRV,\n      },\n    ];\n    const protocols = [\n      {\n        label: DnsProtocol.UDP,\n        value: DnsProtocol.UDP,\n      },\n      {\n        label: DnsProtocol.TCP,\n        value: DnsProtocol.TCP,\n      },\n    ];\n    const rCodes = [\n      {\n        label: 'NOERROR',\n        value: 'NOERROR',\n      },\n    ];\n    return (\n      <Container>\n        <HorizontalGroup>\n          <Field label=\"Record Type\" description=\"DNS record type to query for\" disabled={!isEditor}>\n            <Select value={recordType} options={recordTypes} onChange={this.onRecordTypeChange} />\n          </Field>\n          <Field label=\"Server\" description=\"Address of server to query\" disabled={!isEditor}>\n            <Input value={server} type=\"text\" placeholder=\"server\" onChange={this.onServerChange} />\n          </Field>\n          <Field label=\"Protocol\" description=\"Transport protocol to use\" disabled={!isEditor}>\n            <Select value={protocol} options={protocols} onChange={this.onProtocolChange} />\n          </Field>\n          <Field label=\"Port\" description=\"port on server to query\" disabled={!isEditor}>\n            <Input value={port} type=\"number\" placeholder=\"port\" onChange={this.onPortChange} />\n          </Field>\n        </HorizontalGroup>\n        <Collapse label=\"Validation\" collapsible={true} onToggle={this.onShowValidation} isOpen={showValidation}>\n          <HorizontalGroup>\n            <Field label=\"Valid Response Codes\" description=\"List of valid response codes\" disabled={!isEditor}>\n              <MultiSelect value={validRCodes} options={rCodes} onChange={this.onValidRCodesChange} />\n            </Field>\n          </HorizontalGroup>\n          <DnsValidatorForm\n            name=\"Validate Answer\"\n            description=\"Validate entries in the Answer section of the DNS response\"\n            validations={validateAnswerRRS}\n            onChange={this.onValidateAnswerChange}\n            isEditor={isEditor}\n          />\n          <DnsValidatorForm\n            name=\"Validate Authority\"\n            description=\"Validate entries in the Authority section of the DNS response\"\n            validations={validateAuthorityRRS}\n            onChange={this.onValidateAuthorityChange}\n            isEditor={isEditor}\n          />\n          <DnsValidatorForm\n            name=\"Validate Additional\"\n            description=\"Validate entries in the Additional section of the DNS response\"\n            validations={validateAdditionalRRS}\n            onChange={this.onValidateAdditionalChange}\n            isEditor={isEditor}\n          />\n        </Collapse>\n        <Collapse label=\"Advanced Options\" collapsible={true} onToggle={this.onShowAdvanced} isOpen={showAdvanced}>\n          <HorizontalGroup>\n            <div>\n              <Field label=\"IP Version\" description=\"The IP protocol of the ICMP request\" disabled={!isEditor}>\n                <Select value={ipVersion} options={IpOptions} onChange={this.onIpVersionChange} />\n              </Field>\n            </div>\n          </HorizontalGroup>\n        </Collapse>\n      </Container>\n    );\n  }\n}\n\ninterface DnsValidatorProps {\n  validations: DNSRRValidator | undefined;\n  name: string;\n  description: string;\n  isEditor: boolean;\n  onChange: (validations: DNSRRValidator | undefined) => void;\n}\n\ninterface DnsValidatorState extends DNSRRValidator {}\n\nexport class DnsValidatorForm extends PureComponent<DnsValidatorProps, DnsValidatorState> {\n  state = {\n    failIfMatchesRegexp: this.props.validations?.failIfMatchesRegexp || [],\n    failIfNotMatchesRegexp: this.props.validations?.failIfNotMatchesRegexp || [],\n  };\n\n  onUpdate = () => {\n    const validations: DNSRRValidator = {\n      failIfMatchesRegexp: this.state.failIfMatchesRegexp,\n      failIfNotMatchesRegexp: this.state.failIfNotMatchesRegexp,\n    };\n    this.props.onChange(validations);\n  };\n\n  onFailIfMatchesRegexpChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let failIfMatchesRegexp: string[] = [];\n    this.state.failIfMatchesRegexp.forEach((v, i) => {\n      if (i === index) {\n        failIfMatchesRegexp.push(event.target.value);\n      } else {\n        failIfMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfNotMatchesRegexpChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let failIfNotMatchesRegexp: string[] = [];\n    this.state.failIfNotMatchesRegexp.forEach((v, i) => {\n      if (i === index) {\n        failIfNotMatchesRegexp.push(event.target.value);\n      } else {\n        failIfNotMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfNotMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfMatchesRegexpDelete = (index: number) => () => {\n    let failIfMatchesRegexp: string[] = [];\n    this.state.failIfMatchesRegexp?.forEach((v, i) => {\n      if (i !== index) {\n        failIfMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfNotMatchesRegexpDelete = (index: number) => () => {\n    let failIfNotMatchesRegexp: string[] = [];\n    this.state.failIfNotMatchesRegexp?.forEach((v, i) => {\n      if (i !== index) {\n        failIfNotMatchesRegexp.push(v);\n      }\n    });\n    this.setState({ failIfNotMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfMatchesRegexpAdd = () => {\n    let failIfMatchesRegexp: string[] = [];\n    this.state.failIfMatchesRegexp.forEach(v => {\n      failIfMatchesRegexp.push(v);\n    });\n    failIfMatchesRegexp.push('');\n    this.setState({ failIfMatchesRegexp }, this.onUpdate);\n  };\n\n  onFailIfNotMatchesRegexpAdd = () => {\n    let failIfNotMatchesRegexp: string[] = [];\n    this.state.failIfNotMatchesRegexp.forEach(v => {\n      failIfNotMatchesRegexp.push(v);\n    });\n    failIfNotMatchesRegexp.push('');\n    this.setState({ failIfNotMatchesRegexp }, this.onUpdate);\n  };\n\n  render() {\n    const { failIfMatchesRegexp, failIfNotMatchesRegexp } = this.state;\n    const { isEditor, name, description } = this.props;\n\n    return (\n      <Container>\n        <HorizontalGroup>\n          <Field label={name + ' matches'} description={description + ' match'} disabled={!isEditor}>\n            <Container>\n              <List\n                items={failIfMatchesRegexp}\n                renderItem={(item, index) => (\n                  <HorizontalGroup>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"regexp\"\n                      value={item}\n                      onChange={this.onFailIfMatchesRegexpChange(index)}\n                      disabled={!isEditor}\n                    />\n                    <IconButton\n                      name=\"minus-circle\"\n                      onClick={this.onFailIfMatchesRegexpDelete(index)}\n                      disabled={!isEditor}\n                    />\n                  </HorizontalGroup>\n                )}\n              />\n              <IconButton name=\"plus-circle\" onClick={this.onFailIfMatchesRegexpAdd} disabled={!isEditor} />\n            </Container>\n          </Field>\n          <Field label={name + \" doesn't match\"} description={description + \" don't match\"} disabled={!isEditor}>\n            <Container>\n              <List\n                items={failIfNotMatchesRegexp}\n                renderItem={(item, index) => (\n                  <HorizontalGroup>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"regexp\"\n                      value={item}\n                      onChange={this.onFailIfNotMatchesRegexpChange(index)}\n                      disabled={!isEditor}\n                    />\n                    <IconButton\n                      name=\"minus-circle\"\n                      onClick={this.onFailIfNotMatchesRegexpDelete(index)}\n                      disabled={!isEditor}\n                    />\n                  </HorizontalGroup>\n                )}\n              />\n              <IconButton name=\"plus-circle\" onClick={this.onFailIfNotMatchesRegexpAdd} disabled={!isEditor} />\n            </Container>\n          </Field>\n        </HorizontalGroup>\n      </Container>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  Collapse,\n  Container,\n  HorizontalGroup,\n  Field,\n  Select,\n  IconButton,\n  List,\n  Input,\n  Switch,\n  TextArea,\n} from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { IpVersion, Settings, TcpSettings, TLSConfig, TCPQueryResponse } from 'types';\nimport { IpOptions } from './utils';\nimport { TLSForm } from './http/HttpSettings';\n\ninterface Props {\n  settings: Settings;\n  isEditor: boolean;\n  onUpdate: (settings: Settings) => void;\n}\n\ninterface State extends TcpSettings {\n  showQueryResponse: boolean;\n  showAdvanced: boolean;\n  showTLS: boolean;\n}\n/*\nipVersion: IpVersion;\ntls: boolean;\ntlsConfig?: TLSConfig;\nqueryResponse?: TCPQueryResponse[];\n*/\nexport class TcpSettingsForm extends PureComponent<Props, State> {\n  state: State = {\n    ipVersion: this.props.settings!.tcp?.ipVersion || IpVersion.V4,\n    tls: this.props.settings!.tcp?.tls || false,\n    tlsConfig: this.props.settings!.tcp?.tlsConfig,\n    queryResponse: this.props.settings!.tcp?.queryResponse,\n    showQueryResponse: false,\n    showAdvanced: false,\n    showTLS: false,\n  };\n\n  onUpdate = () => {\n    const settings = this.state as TcpSettings;\n    this.props.onUpdate({\n      tcp: settings,\n    });\n  };\n\n  onIpVersionChange = (value: SelectableValue<IpVersion>) => {\n    this.setState({ ipVersion: value.value || IpVersion.Any }, this.onUpdate);\n  };\n\n  onToggleTLS = (isOpen: boolean) => {\n    this.setState({ showTLS: !this.state.showTLS }, this.onUpdate);\n  };\n\n  onTLSChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ tls: !this.state.tls }, this.onUpdate);\n  };\n\n  onTLSCOnfigChange = (tlsConfig: TLSConfig) => {\n    this.setState({ tlsConfig: tlsConfig }, this.onUpdate);\n  };\n\n  onShowAdvanced = (isOpen: boolean) => {\n    this.setState({ showAdvanced: !this.state.showAdvanced });\n  };\n\n  onShowQueryResponse = (isOpen: boolean) => {\n    this.setState({ showQueryResponse: !this.state.showQueryResponse });\n  };\n\n  onQueryResponsesUpdate = (queryResponse: TCPQueryResponse[]) => {\n    let config: TCPQueryResponse[] = [];\n    if (!this.state.queryResponse) {\n      config = queryResponse;\n    } else {\n      queryResponse.forEach(v => {\n        config.push(v);\n      });\n    }\n\n    this.setState({ queryResponse: config }, this.onUpdate);\n  };\n\n  render() {\n    const { ipVersion, tls, showTLS, showQueryResponse, showAdvanced, tlsConfig, queryResponse } = this.state;\n    const { isEditor } = this.props;\n\n    return (\n      <Container>\n        <Field\n          label=\"Use TLS\"\n          description=\"Whether or not TLS is used when the connection is initiated.\"\n          disabled={!isEditor}\n        >\n          <Container padding=\"sm\">\n            <Switch title=\"Use TLS\" value={tls} onChange={this.onTLSChange} disabled={!isEditor} />\n          </Container>\n        </Field>\n        <Collapse\n          label=\"Query/Response\"\n          collapsible={true}\n          onToggle={this.onShowQueryResponse}\n          isOpen={showQueryResponse}\n        >\n          <Container>\n            <QueryResponseForm\n              queryResponses={queryResponse}\n              isEditor={isEditor}\n              onChange={this.onQueryResponsesUpdate}\n            />\n          </Container>\n        </Collapse>\n        <Collapse label=\"TLS Config\" collapsible={true} onToggle={this.onToggleTLS} isOpen={showTLS}>\n          <TLSForm onChange={this.onTLSCOnfigChange} isEditor={isEditor} tlsConfig={tlsConfig} />\n        </Collapse>\n        <Collapse label=\"Advanced Options\" collapsible={true} onToggle={this.onShowAdvanced} isOpen={showAdvanced}>\n          <HorizontalGroup>\n            <div>\n              <Field label=\"IP Version\" description=\"The IP protocol of the ICMP request\" disabled={!isEditor}>\n                <Select value={ipVersion} options={IpOptions} onChange={this.onIpVersionChange} />\n              </Field>\n            </div>\n          </HorizontalGroup>\n        </Collapse>\n      </Container>\n    );\n  }\n}\n\ninterface RawQueryResponse {\n  send: string;\n  expect: string;\n  startTLS: boolean;\n}\n\ninterface QueryResponseProps {\n  queryResponses?: TCPQueryResponse[];\n  isEditor: boolean;\n  onChange: (queryResponses: TCPQueryResponse[]) => void;\n}\n\ninterface QueryResponseState {\n  queryResponses: RawQueryResponse[];\n}\n\nexport class QueryResponseForm extends PureComponent<QueryResponseProps, QueryResponseState> {\n  state = {\n    queryResponses: (this.props.queryResponses || []).map(v => {\n      return {\n        expect: atob(v.expect),\n        send: atob(v.send),\n        startTLS: v.startTLS,\n      };\n    }),\n  };\n\n  onUpdate = () => {\n    let queryResponses: TCPQueryResponse[] = [];\n    this.state.queryResponses.forEach(v => {\n      queryResponses.push({\n        expect: btoa(v.expect),\n        send: btoa(v.send),\n        startTLS: v.startTLS,\n      });\n    });\n    this.props.onChange(queryResponses);\n  };\n\n  onSendChange = (index: number) => (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    let queryResponses: TCPQueryResponse[] = [];\n    this.state.queryResponses.forEach((v, i) => {\n      if (i === index) {\n        queryResponses.push({\n          send: event.target.value,\n          expect: v.expect,\n          startTLS: v.startTLS,\n        });\n      } else {\n        queryResponses.push(v);\n      }\n    });\n    this.setState({ queryResponses }, this.onUpdate);\n  };\n\n  onExpectChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let queryResponses: TCPQueryResponse[] = [];\n    this.state.queryResponses.forEach((v, i) => {\n      if (i === index) {\n        queryResponses.push({\n          send: v.send,\n          expect: event.target.value,\n          startTLS: v.startTLS,\n        });\n      } else {\n        queryResponses.push(v);\n      }\n    });\n    this.setState({ queryResponses }, this.onUpdate);\n  };\n\n  onStartTLSChange = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let queryResponses: TCPQueryResponse[] = [];\n    this.state.queryResponses.forEach((v, i) => {\n      if (i === index) {\n        queryResponses.push({\n          send: v.send,\n          expect: v.expect,\n          startTLS: !v.startTLS,\n        });\n      } else {\n        queryResponses.push(v);\n      }\n    });\n    this.setState({ queryResponses }, this.onUpdate);\n  };\n\n  onQueryResponseDelete = (index: number) => () => {\n    let queryResponses: TCPQueryResponse[] = [];\n    this.state.queryResponses.forEach((v, i) => {\n      if (i !== index) {\n        queryResponses.push(v);\n      }\n    });\n    this.setState({ queryResponses }, this.onUpdate);\n  };\n\n  onQueryResponseAdd = () => {\n    let queryResponses: TCPQueryResponse[] = [];\n    this.state.queryResponses.forEach(v => {\n      queryResponses.push(v);\n    });\n    queryResponses.push({\n      send: '',\n      expect: '',\n      startTLS: false,\n    });\n    this.setState({ queryResponses }, this.onUpdate);\n  };\n\n  render() {\n    const { queryResponses } = this.state;\n    const { isEditor } = this.props;\n\n    return (\n      <Field\n        label=\"Query/Response\"\n        description=\"The query sent in the TCP probe and the expected associated response. StartTLS upgrades TCP connection to TLS.\"\n        disabled={!isEditor}\n      >\n        <Container>\n          <List\n            items={queryResponses}\n            renderItem={(item, index) => (\n              <HorizontalGroup>\n                <Input\n                  type=\"text\"\n                  placeholder=\"response to expect\"\n                  value={item.expect}\n                  onChange={this.onExpectChange(index)}\n                  disabled={!isEditor}\n                />\n                <TextArea\n                  type=\"text\"\n                  placeholder=\"data to send\"\n                  rows={1}\n                  value={item.send}\n                  onChange={this.onSendChange(index)}\n                  disabled={!isEditor}\n                />\n                <HorizontalGroup>\n                  <span>StartTLS</span>\n                  <Container padding=\"sm\">\n                    <Switch\n                      title=\"StartTLS\"\n                      value={item.startTLS}\n                      onChange={this.onStartTLSChange(index)}\n                      disabled={!isEditor}\n                    />\n                  </Container>\n                </HorizontalGroup>\n                <IconButton name=\"minus-circle\" onClick={this.onQueryResponseDelete(index)} disabled={!isEditor} />\n              </HorizontalGroup>\n            )}\n          />\n          <IconButton name=\"plus-circle\" onClick={this.onQueryResponseAdd} disabled={!isEditor} />\n        </Container>\n      </Field>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  Button,\n  Container,\n  ConfirmModal,\n  Field,\n  Input,\n  HorizontalGroup,\n  Switch,\n  MultiSelect,\n  Select,\n  Legend,\n  Collapse,\n} from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { Check, Label as SMLabel, Settings, CheckType, Probe, OrgRole } from 'types';\nimport { SMDataSource } from 'datasource/DataSource';\nimport { hasRole, checkType, defaultSettings } from 'utils';\nimport { PingSettingsForm } from './PingSettings';\nimport { HttpSettingsForm } from './http/HttpSettings';\nimport { DnsSettingsForm } from './DnsSettings';\nimport { TcpSettingsForm } from './TcpSettings';\nimport { SMLabelsForm } from './utils';\nimport * as Validation from 'validation';\n\ninterface TargetHelpInfo {\n  text?: string;\n  example: string;\n}\n\ninterface Props {\n  check: Check;\n  instance: SMDataSource;\n  onReturn: (reload: boolean) => void;\n}\n\ninterface State {\n  check?: Check;\n  typeOfCheck?: CheckType;\n  probes: Probe[];\n  showDeleteModal: boolean;\n  targetHelp: TargetHelpInfo;\n  showOptions: boolean;\n}\n\nexport class CheckEditor extends PureComponent<Props, State> {\n  state: State = {\n    showDeleteModal: false,\n    showOptions: false,\n    probes: [],\n    targetHelp: {\n      example: '',\n    },\n  };\n\n  async componentDidMount() {\n    const { instance } = this.props;\n    const check = { ...this.props.check } as Check;\n    const probes = await instance.listProbes();\n    const typeOfCheck = checkType(check.settings);\n    const targetHelp = this.targetHelpText(typeOfCheck);\n    this.setState({\n      check,\n      typeOfCheck,\n      probes,\n      targetHelp,\n    });\n  }\n\n  showDeleteCheckModal = (show: boolean) => () => {\n    this.setState({ showDeleteModal: show });\n  };\n\n  onRemoveCheck = async () => {\n    const id = this.props.check.id || 0;\n    if (!this.props.check.id) {\n      return;\n    }\n    const info = this.props.instance.deleteCheck(id);\n    console.log('Remove Check', id, info);\n    this.props.onReturn(true);\n  };\n\n  onLabelsUpdate = (labels: SMLabel[]) => {\n    let check = { ...this.state.check } as Check;\n    check.labels = labels;\n    this.setState({ check });\n  };\n\n  onProbesUpdate = (probes: number[]) => {\n    let check = { ...this.state.check } as Check;\n    check.probes = probes;\n    this.setState({ check });\n  };\n\n  onSettingsUpdate = (settings: Settings) => {\n    let check = { ...this.state.check } as Check;\n    check.settings = settings;\n    this.setState({ check });\n  };\n\n  onSetType = (type: SelectableValue<CheckType>) => {\n    let check = { ...this.state.check } as Check;\n    if (!type.value) {\n      return;\n    }\n    const typeOfCheck = type.value;\n    const settings = defaultSettings(typeOfCheck);\n    if (!settings) {\n      return;\n    }\n    check.settings = settings;\n\n    const targetHelp = this.targetHelpText(typeOfCheck);\n    this.setState({ check, targetHelp, typeOfCheck });\n  };\n\n  onJobUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let check = { ...this.state.check } as Check;\n    check.job = event.target.value;\n    this.setState({ check });\n  };\n\n  onTargetUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let check = { ...this.state.check } as Check;\n    check.target = event.target.value;\n    this.setState({ check });\n  };\n\n  onFrequencyUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let check = { ...this.state.check } as Check;\n    check.frequency = event.target.valueAsNumber * 1000;\n    this.setState({ check });\n  };\n\n  onTimeoutUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let check = { ...this.state.check } as Check;\n    check.timeout = event.target.valueAsNumber * 1000;\n    this.setState({ check });\n  };\n\n  onSave = async () => {\n    const { instance } = this.props;\n    const { check } = this.state;\n    if (!check) {\n      return;\n    }\n    if (check.id) {\n      console.log('UPDATE', check, instance);\n      const info = await instance.updateCheck(check);\n      console.log('got', info);\n    } else {\n      console.log('ADD', check);\n      const info = await instance.addCheck(check);\n      console.log('got', info);\n    }\n    this.props.onReturn(true);\n  };\n\n  onEnableChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let check = { ...this.state.check } as Check;\n    check.enabled = !check.enabled;\n    this.setState({ check });\n  };\n\n  onBack = () => {\n    this.props.onReturn(false);\n  };\n\n  targetHelpText(typeOfCheck: CheckType | undefined): TargetHelpInfo {\n    if (!typeOfCheck) {\n      return { text: '', example: '' };\n    }\n    let resp: TargetHelpInfo;\n    switch (typeOfCheck) {\n      case CheckType.HTTP: {\n        resp = {\n          text: 'Full URL to send requests to',\n          example: 'https://grafana.com/',\n        };\n        break;\n      }\n      case CheckType.PING: {\n        resp = {\n          text: 'Hostname to ping',\n          example: 'grafana.com',\n        };\n        break;\n      }\n      case CheckType.DNS: {\n        resp = {\n          text: 'Name of record to query',\n          example: 'grafana.com',\n        };\n        break;\n      }\n      case CheckType.TCP: {\n        resp = {\n          text: 'Host:port to connect to',\n          example: 'grafana.com:80',\n        };\n        break;\n      }\n    }\n    return resp;\n  }\n\n  onToggleOptions = (isOpen: boolean) => {\n    this.setState({ showOptions: !this.state.showOptions });\n  };\n\n  render() {\n    const { check, showDeleteModal, probes, targetHelp, typeOfCheck, showOptions } = this.state;\n    if (!check || probes.length === 0) {\n      return <div>Loading...</div>;\n    }\n\n    let legend = 'Edit Check';\n    if (!check.id) {\n      legend = 'Add Check';\n    }\n\n    let isEditor = hasRole(OrgRole.EDITOR);\n\n    const checkTypes = [\n      {\n        label: 'HTTP',\n        value: CheckType.HTTP,\n      },\n      {\n        label: 'PING',\n        value: CheckType.PING,\n      },\n      {\n        label: 'DNS',\n        value: CheckType.DNS,\n      },\n      {\n        label: 'TCP',\n        value: CheckType.TCP,\n      },\n    ];\n\n    return (\n      <div>\n        <Legend>{legend}</Legend>\n        <div>\n          <HorizontalGroup justify=\"flex-start\" spacing=\"md\">\n            <Field label=\"Check Type\" disabled={check.id ? true : false}>\n              <Select value={typeOfCheck} options={checkTypes} onChange={this.onSetType} width={30} />\n            </Field>\n            <Field label=\"Enabled\" disabled={!isEditor}>\n              <Container padding=\"sm\">\n                <Switch value={check.enabled} onChange={this.onEnableChange} disabled={!isEditor} />\n              </Container>\n            </Field>\n          </HorizontalGroup>\n          <Field\n            label=\"Job Name\"\n            description=\"Name used for job label\"\n            disabled={!isEditor}\n            invalid={!Validation.validateJob(check.job)}\n          >\n            <Input type=\"string\" placeholder=\"jobName\" value={check.job} onChange={this.onJobUpdate} />\n          </Field>\n          <Field\n            label=\"Target\"\n            description={targetHelp.text}\n            disabled={!isEditor}\n            invalid={!Validation.validateTarget(checkType(check.settings), check.target)}\n          >\n            <Input\n              type=\"string\"\n              placeholder={targetHelp.example}\n              value={check.target}\n              onChange={this.onTargetUpdate}\n              required={true}\n            />\n          </Field>\n          <div>\n            <Field\n              label=\"Probe Locations\"\n              description=\"Select the locations where this target should be monitored from\"\n              disabled={!isEditor}\n              invalid={!Validation.validateProbes(check.probes)}\n            >\n              <CheckProbes\n                probes={check.probes}\n                availableProbes={probes}\n                onUpdate={this.onProbesUpdate}\n                isEditor={isEditor}\n              />\n            </Field>\n          </div>\n          <Collapse label=\"Options\" collapsible={true} onToggle={this.onToggleOptions} isOpen={showOptions}>\n            <Field\n              label=\"Frequency\"\n              description=\"How frequently the check should run.\"\n              disabled={!isEditor}\n              invalid={!Validation.validateFrequency(check.frequency)}\n            >\n              <Input\n                label=\"Frequency\"\n                type=\"number\"\n                step={10}\n                value={check!.frequency / 1000 || 60}\n                onChange={this.onFrequencyUpdate}\n                suffix=\"seconds\"\n                max={120}\n                min={10}\n                width={30}\n              />\n            </Field>\n            <Field\n              label=\"Timeout\"\n              description=\"Maximum execution time for a check\"\n              disabled={!isEditor}\n              invalid={!Validation.validateTimeout(check.timeout)}\n            >\n              <Input\n                label=\"Timeout\"\n                type=\"number\"\n                step={0.1}\n                value={check!.timeout / 1000 || 5}\n                onChange={this.onTimeoutUpdate}\n                suffix=\"seconds\"\n                max={10}\n                min={1}\n                width={30}\n              />\n            </Field>\n\n            <Field\n              label=\"Labels\"\n              description=\"Custom labels to be included with collected metrics and logs.\"\n              disabled={!isEditor}\n              invalid={!Validation.validateLabels(check.labels)}\n            >\n              <SMLabelsForm\n                labels={check.labels}\n                onUpdate={this.onLabelsUpdate}\n                isEditor={isEditor}\n                type=\"Label\"\n                limit={5}\n              />\n            </Field>\n            <br />\n            <h3 className=\"page-heading\">{typeOfCheck!.toLocaleUpperCase()} Settings</h3>\n            <CheckSettings\n              settings={check.settings}\n              typeOfCheck={typeOfCheck || CheckType.HTTP}\n              onUpdate={this.onSettingsUpdate}\n              isEditor={isEditor}\n            />\n          </Collapse>\n        </div>\n        <HorizontalGroup>\n          <Button onClick={this.onSave} disabled={!isEditor || !Validation.validateCheck(check)}>\n            Save {Validation.validateCheck(check)}\n          </Button>\n          {check.id && (\n            <Button variant=\"destructive\" onClick={this.showDeleteCheckModal(true)} disabled={!isEditor}>\n              Delete Check\n            </Button>\n          )}\n          <ConfirmModal\n            isOpen={showDeleteModal}\n            title=\"Delete check\"\n            body=\"Are you sure you want to delete this check?\"\n            confirmText=\"Delete check\"\n            onConfirm={this.onRemoveCheck}\n            onDismiss={this.showDeleteCheckModal(false)}\n          />\n          <a onClick={this.onBack}>Back</a>\n        </HorizontalGroup>\n      </div>\n    );\n  }\n}\n\ninterface CheckSettingsProps {\n  isEditor: boolean;\n  settings: Settings;\n  typeOfCheck: CheckType;\n  onUpdate: (settings: Settings) => void;\n}\n\ninterface CheckSettingsState {\n  settings?: Settings;\n}\n\nexport class CheckSettings extends PureComponent<CheckSettingsProps, CheckSettingsState> {\n  state: CheckSettingsState = {};\n\n  componentDidMount() {\n    const { settings } = this.props;\n    this.setState({ settings });\n  }\n\n  componentDidUpdate(oldProps: CheckSettingsProps) {\n    const { settings, typeOfCheck } = this.props;\n    if (typeOfCheck !== oldProps.typeOfCheck) {\n      this.setState({ settings });\n    }\n  }\n\n  onUpdate = () => {\n    this.props.onUpdate(this.state.settings!);\n  };\n\n  onJsonChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    let settings: Settings = {};\n    settings[this.props.typeOfCheck] = JSON.parse(event.target.value);\n    this.setState({ settings: settings }, this.onUpdate);\n  };\n\n  onSettingsChange = (settings: Settings) => {\n    this.setState({ settings: settings }, this.onUpdate);\n  };\n\n  render() {\n    const { settings } = this.state;\n    if (!settings) {\n      return <div>Loading....</div>;\n    }\n    const { isEditor } = this.props;\n\n    switch (this.props.typeOfCheck) {\n      case CheckType.PING: {\n        return <PingSettingsForm settings={settings} onUpdate={this.onSettingsChange} isEditor={isEditor} />;\n      }\n      case CheckType.HTTP: {\n        return <HttpSettingsForm settings={settings} onUpdate={this.onSettingsChange} isEditor={isEditor} />;\n      }\n      case CheckType.DNS: {\n        return <DnsSettingsForm settings={settings} onUpdate={this.onSettingsChange} isEditor={isEditor} />;\n      }\n      case CheckType.TCP: {\n        return <TcpSettingsForm settings={settings} onUpdate={this.onSettingsChange} isEditor={isEditor} />;\n      }\n    }\n  }\n}\n\ninterface CheckProbesProps {\n  probes: number[];\n  availableProbes: Probe[];\n  isEditor: boolean;\n  onUpdate: (probes: number[]) => void;\n}\n\ninterface CheckProbesState {\n  probes: number[];\n  probeStr: string;\n}\n\nexport class CheckProbes extends PureComponent<CheckProbesProps, CheckProbesState> {\n  state = {\n    probes: this.props.probes || [],\n    probeStr: this.props.probes.join(','),\n  };\n\n  onChange = (item: Array<SelectableValue<number>>) => {\n    let probes: number[] = [];\n    for (const p of item.values()) {\n      if (p.value) {\n        probes.push(p.value);\n      }\n    }\n    const str = probes.join(',');\n    this.setState({ probes: probes, probeStr: str }, this.onUpdate);\n  };\n\n  onUpdate = () => {\n    this.props.onUpdate(this.state.probes);\n  };\n\n  onAllLocations = () => {\n    let probes: number[] = [];\n    for (const p of this.props.availableProbes) {\n      if (p.id) {\n        probes.push(p.id);\n      }\n    }\n    const str = probes.join(',');\n    this.setState({ probes: probes, probeStr: str }, this.onUpdate);\n  };\n  onClearLocations = () => {\n    let probes: number[] = [];\n    this.setState({ probes: probes, probeStr: '' }, this.onUpdate);\n  };\n\n  render() {\n    const { probes } = this.state;\n    const { availableProbes, isEditor } = this.props;\n    let options = [];\n    for (const p of availableProbes) {\n      options.push({\n        label: p.name,\n        value: p.id,\n        description: p.online ? 'Online' : 'Offline',\n      });\n    }\n    let selectedProbes = [];\n    for (const p of probes) {\n      let existing = options.find(item => item.value === p);\n      if (existing) {\n        selectedProbes.push(existing);\n      }\n    }\n\n    return (\n      <div>\n        <MultiSelect\n          options={options}\n          value={selectedProbes}\n          onChange={this.onChange}\n          disabled={!isEditor}\n          invalid={!Validation.validateProbes(probes)}\n          closeMenuOnSelect={false}\n        />\n        <Container margin=\"xs\">\n          <HorizontalGroup spacing=\"md\">\n            <Button onClick={this.onAllLocations} disabled={!isEditor} variant=\"secondary\" size=\"sm\">\n              All&nbsp;&nbsp;\n            </Button>\n            <Button onClick={this.onClearLocations} disabled={!isEditor} variant=\"secondary\" size=\"sm\" type=\"reset\">\n              Clear\n            </Button>\n          </HorizontalGroup>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { BigValueColorMode, BigValueGraphMode, BigValue, Container, IconName, Icon } from '@grafana/ui';\nimport { DataSourceInstanceSettings, GraphSeriesValue, DisplayValue } from '@grafana/data';\nimport { config, getBackendSrv } from '@grafana/runtime';\nimport { Check } from 'types';\n\ninterface Props {\n  ds: DataSourceInstanceSettings;\n  labelNames: string[];\n  labelValues: string[];\n  height: number;\n  width: number;\n  sparkline: boolean;\n  onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}\n\ninterface State {\n  filter?: string;\n  value: DisplayValue;\n  points: GraphSeriesValue[][];\n  lastUpdate: number;\n}\n\nexport class UptimeGauge extends PureComponent<Props, State> {\n  state: State = {\n    lastUpdate: 0,\n    value: {\n      numeric: 0,\n      title: 'Uptime',\n      text: 'loading...',\n    },\n    points: [],\n  };\n\n  filterString(labelNames: string[], labelValues: string[]): string {\n    let filters: string[] = [];\n    for (let i in labelNames) {\n      const k = labelNames[i];\n      const v = labelValues[i];\n      filters.push(`${k}=\"${v}\"`);\n    }\n    return filters.join(',');\n  }\n\n  async componentDidMount() {\n    const { labelNames, labelValues } = this.props;\n    const filter = this.filterString(labelNames, labelValues);\n    this.setState({ filter }, this.queryUptime);\n  }\n\n  async componentDidUpdate(oldProps: Props) {\n    const { labelNames, labelValues } = this.props;\n    const filter = this.filterString(labelNames, labelValues);\n    if (this.state.filter !== filter) {\n      this.setState({ filter }, this.queryUptime);\n    }\n  }\n\n  async queryUptime() {\n    const { ds, sparkline } = this.props;\n    const { filter } = this.state;\n    if (!filter) {\n      return;\n    }\n    const backendSrv = getBackendSrv();\n    const lastUpdate = Math.floor(Date.now() / 1000);\n    const resp = await backendSrv.datasourceRequest({\n      method: 'GET',\n      url: `${ds.url}/api/v1/query`,\n      params: {\n        query: `sum(rate(probe_success_sum{${filter}}[3h])) / sum(rate(probe_success_count{${filter}}[3h]))`,\n        time: lastUpdate,\n      },\n    });\n    if (!resp.ok) {\n      console.log(resp);\n      return;\n    }\n    let value: DisplayValue = {\n      numeric: 0,\n      title: 'Uptime',\n      text: 'loading...',\n    };\n    if (resp.data.data.result.length < 1) {\n      value.text = 'N/A';\n      this.setState({ value, lastUpdate });\n      return;\n    }\n    const uptime = parseFloat(resp.data.data.result[0].value[1]) * 100;\n    let color = 'green';\n    if (uptime < 99) {\n      color = 'red';\n    }\n    value.color = color;\n    value.numeric = uptime;\n    value.text = uptime.toFixed(2) + '%';\n\n    this.setState({ value, lastUpdate }, () => {\n      if (sparkline) {\n        this.queryHistory();\n      }\n    });\n  }\n\n  async queryHistory() {\n    const { ds } = this.props;\n    const { filter } = this.state;\n    if (!filter) {\n      return;\n    }\n    const backendSrv = getBackendSrv();\n    const lastUpdate = this.state.lastUpdate + 1;\n    const resp = await backendSrv.datasourceRequest({\n      method: 'POST',\n      url: `${ds.url}/api/v1/query_range`,\n      params: {\n        query: `100 * sum(rate(probe_success_sum{${filter}}[10m])) / sum(rate(probe_success_count{${filter}}[10m]))`,\n        start: lastUpdate - 60 * 60 * 3,\n        end: lastUpdate,\n        step: 600,\n      },\n    });\n    if (!resp.ok) {\n      console.log(resp);\n      return;\n    }\n    let points: GraphSeriesValue[][] = [];\n    if (resp.data.data.result.length < 1) {\n      console.log(resp.data);\n      return;\n    }\n    let i = 0;\n    for (const p of resp.data.data.result[0].values) {\n      points.push([i, parseFloat(p[1])]);\n      i++;\n    }\n    this.setState({ points: points, lastUpdate: lastUpdate + 1 });\n  }\n\n  render() {\n    const { value, points } = this.state;\n    const { height, width, sparkline, onClick } = this.props;\n    let sparklineData = undefined;\n    if (sparkline && points.length > 0) {\n      sparklineData = {\n        yMin: 0,\n        yMax: 150,\n        data: points,\n      };\n    }\n    return (\n      <Container>\n        <BigValue\n          theme={config.theme}\n          colorMode={BigValueColorMode.Value}\n          height={height}\n          width={width}\n          graphMode={BigValueGraphMode.Area}\n          value={value}\n          sparkline={sparklineData}\n          onClick={onClick}\n        />\n      </Container>\n    );\n  }\n}\n\ninterface CheckHealthProps {\n  ds: DataSourceInstanceSettings;\n  check: Check;\n}\n\ninterface CheckHealthState {\n  iconName: IconName;\n  className: string;\n}\n\nexport class CheckHealth extends PureComponent<CheckHealthProps, CheckHealthState> {\n  state: CheckHealthState = {\n    iconName: 'heart',\n    className: 'paused',\n  };\n\n  async componentDidMount() {\n    const { check } = this.props;\n    if (!check.enabled) {\n      this.setState({ iconName: 'pause' });\n      return;\n    }\n    await this.queryUptime();\n  }\n\n  async componentDidUpdate(oldProps: CheckHealthProps) {\n    if (this.props.check.id === oldProps.check.id) {\n      return;\n    }\n    const { check } = this.props;\n    if (!check.enabled) {\n      this.setState({ iconName: 'pause' });\n      return;\n    }\n    await this.queryUptime();\n  }\n\n  async queryUptime() {\n    const { ds, check } = this.props;\n    const filter = `instance=\"${check.target}\", job=\"${check.job}\"`;\n\n    const backendSrv = getBackendSrv();\n    const lastUpdate = Math.floor(Date.now() / 1000);\n    const resp = await backendSrv.datasourceRequest({\n      method: 'GET',\n      url: `${ds.url}/api/v1/query`,\n      params: {\n        query: `sum(probe_success{${filter}}) / count(probe_success{${filter}})`,\n        time: lastUpdate,\n      },\n    });\n    if (!resp.ok) {\n      console.log(resp);\n      return;\n    }\n    let iconName: IconName = 'heart';\n    let className = 'ok';\n    if (resp.data.data.result.length < 1) {\n      iconName = 'question-circle';\n      className = 'paused';\n      this.setState({ iconName, className });\n      return;\n    }\n    const uptime = parseFloat(resp.data.data.result[0].value[1]) * 100;\n    if (uptime < 99) {\n      className = 'warning';\n    }\n    if (uptime < 50) {\n      className = 'critical';\n      iconName = 'heart-break';\n    }\n    this.setState({ iconName, className });\n  }\n\n  render() {\n    const { iconName, className } = this.state;\n    return <Icon name={iconName} size=\"xxl\" className={`alert-rule-item__icon alert-state-${className}`} />;\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { Check, GrafanaInstances, Label, IpVersion, OrgRole, CheckType } from 'types';\nimport { getLocationSrv } from '@grafana/runtime';\nimport {\n  Button,\n  HorizontalGroup,\n  Icon,\n  VerticalGroup,\n  Container,\n  Select,\n  Input,\n  Pagination,\n  InfoBox,\n} from '@grafana/ui';\nimport { SelectableValue, unEscapeStringFromRegex, escapeStringForRegex } from '@grafana/data';\nimport { CheckEditor } from 'components/CheckEditor';\nimport { UptimeGauge, CheckHealth } from 'components/UptimeGauge';\nimport { hasRole, dashboardUID } from 'utils';\n\ninterface Props {\n  instance: GrafanaInstances;\n  id?: string;\n  checksPerPage?: number;\n}\n\ninterface State {\n  checks: Check[];\n  filteredChecks: Check[];\n  check?: Check; // selected check\n  addNew: boolean;\n  typeFilter: string;\n  searchFilter: string;\n  totalPages: number;\n  currentPage: number;\n  checksPerPage: number;\n}\n\nexport class ChecksPage extends PureComponent<Props, State> {\n  state: State = {\n    checks: [],\n    filteredChecks: [],\n    addNew: false,\n    typeFilter: 'all',\n    searchFilter: '',\n    totalPages: 1,\n    currentPage: 1,\n    checksPerPage: this.props.checksPerPage || 15,\n  };\n\n  async componentDidMount() {\n    const { instance, id } = this.props;\n    const { checksPerPage } = this.state;\n    const checks = await instance.api.listChecks();\n    const sortedChecks = checks.sort((a, b) => b.job.localeCompare(a.job));\n    const totalPages = Math.ceil(sortedChecks.length / checksPerPage);\n    const num = id ? parseInt(id, 10) : -1;\n    const check = checks.find(c => c.id === num);\n    this.setState({\n      checks: sortedChecks,\n      check: check,\n      totalPages: totalPages,\n      filteredChecks: sortedChecks.slice(0, checksPerPage),\n    });\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    if (this.props.id !== oldProps.id) {\n      const { id } = this.props;\n      const num = id ? parseInt(id, 10) : -1;\n      const check = this.state.checks.find(c => c.id === num);\n      this.setState({ check });\n    }\n  }\n\n  //-----------------------------------------------------------------\n  // CHECK List\n  //-----------------------------------------------------------------\n\n  onSelectCheck = (id: number) => {\n    getLocationSrv().update({\n      partial: true,\n      query: {\n        id,\n      },\n    });\n  };\n\n  formatLabels(labels: Label[]) {\n    return labels.map(label => {\n      return (\n        <div>\n          <a onClick={this.onFilterByLabel(label.name, label.value)}>\n            {label.name}={label.value}\n          </a>\n        </div>\n      );\n    });\n  }\n\n  filterChecks() {\n    const { typeFilter, searchFilter, currentPage, checks, checksPerPage } = this.state;\n    let filtered = checks\n      .filter(a => {\n        if (typeFilter === 'all') {\n          return true;\n        }\n        const checkType = Object.keys(a.settings)[0];\n        if (checkType === typeFilter) {\n          return true;\n        }\n        return false;\n      })\n      .filter(a => {\n        if (!searchFilter) {\n          return true;\n        }\n\n        // allow users to search using <term>=<somevalue>.\n        // <term> can be one of target, job or a label name\n        if (searchFilter.split('=').length > 1) {\n          let parts = searchFilter.split('=', 2);\n          let term = parts[0];\n          let value = parts[1];\n          switch (term) {\n            case 'target': {\n              return a.target.match(value);\n            }\n            case 'job': {\n              return a.job.match(value);\n            }\n            default: {\n              for (let label of a.labels) {\n                if (label.name === term && label.value.match(value)) {\n                  return true;\n                }\n              }\n            }\n          }\n          return false;\n        }\n        if (a.job.match(searchFilter) || a.target.match(searchFilter)) {\n          return true;\n        }\n        for (let label of a.labels) {\n          if (label.name.match(searchFilter) || label.value.match(searchFilter)) {\n            return true;\n          }\n        }\n        return false;\n      });\n\n    let totalPages = Math.ceil(filtered.length / checksPerPage);\n    this.setState({\n      totalPages: totalPages,\n      filteredChecks: filtered.slice(checksPerPage * (currentPage - 1), currentPage * checksPerPage),\n    });\n  }\n\n  showDashboard = (check: Check) => (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    event.stopPropagation();\n    const { instance } = this.props;\n    const checkType = Object.keys(check.settings)[0];\n    const target = dashboardUID(checkType, instance.api);\n\n    if (!target) {\n      console.log('dashboard not found.', checkType);\n      return;\n    }\n\n    const d = `d/${target.uid}`;\n    let q = {\n      'var-instance': check.target,\n      'var-job': check.job,\n    };\n\n    getLocationSrv().update({\n      partial: false,\n      path: d,\n      query: q,\n    });\n  };\n\n  onTypeFilterChanged = (type: SelectableValue<string>) => {\n    if (!type.value) {\n      return;\n    }\n    this.setState({ typeFilter: type.value, currentPage: 1 }, this.filterChecks);\n  };\n\n  onFilterByLabel = (labelName: string, labelValue: string) => (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    event.stopPropagation();\n    this.setState({ searchFilter: `${labelName}=${labelValue}`, currentPage: 1 }, this.filterChecks);\n  };\n\n  onSearchFilterChange = (filter: string) => {\n    this.setState({ searchFilter: filter }, this.filterChecks);\n  };\n\n  changePage = (toPage: number) => {\n    this.setState({ currentPage: toPage }, this.filterChecks);\n  };\n\n  renderNoChecks() {\n    return (\n      <InfoBox\n        title=\"Grafna Cloud Synthetic Monitoring\"\n        url={'https://grafana.com/docs/grafana-cloud/synthetic-monitoring/'}\n      >\n        <p>\n          This account does not currently have any checks configured. Click the button below to start monitoring your\n          services with Grafana Cloud.\n        </p>\n        {hasRole(OrgRole.EDITOR) && (\n          <Button variant=\"primary\" onClick={this.onAddNew}>\n            New Check\n          </Button>\n        )}\n      </InfoBox>\n    );\n  }\n\n  renderCheckList() {\n    const { checks, typeFilter, searchFilter, filteredChecks, totalPages, currentPage } = this.state;\n    const { instance } = this.props;\n    if (!checks) {\n      return null;\n    }\n\n    if (checks.length === 0) {\n      return this.renderNoChecks();\n    }\n\n    const checkTypes = [\n      {\n        label: 'All',\n        value: 'all',\n      },\n      {\n        label: 'HTTP',\n        value: CheckType.HTTP,\n      },\n      {\n        label: 'PING',\n        value: CheckType.PING,\n      },\n      {\n        label: 'DNS',\n        value: CheckType.DNS,\n      },\n      {\n        label: 'TCP',\n        value: CheckType.TCP,\n      },\n    ];\n    const ds = instance.api.getMetricsDS();\n    return (\n      <div>\n        <div className=\"page-action-bar\">\n          <div className=\"gf-form gf-form--grow\">\n            <Input\n              // Replaces the usage of ref\n              autoFocus\n              prefix={<Icon name=\"search\" />}\n              width={40}\n              type=\"text\"\n              value={searchFilter ? unEscapeStringFromRegex(searchFilter) : ''}\n              onChange={event => this.onSearchFilterChange(escapeStringForRegex(event.currentTarget.value))}\n              placeholder=\"search checks\"\n            />\n          </div>\n          <div className=\"gf-form\">\n            <label className=\"gf-form-label\">Types</label>\n\n            <div className=\"width-13\">\n              <Select options={checkTypes} onChange={this.onTypeFilterChanged} value={typeFilter} />\n            </div>\n          </div>\n          <div className=\"page-action-bar__spacer\" />\n          {hasRole(OrgRole.EDITOR) && (\n            <Button variant=\"secondary\" onClick={this.onAddNew}>\n              New Check\n            </Button>\n          )}\n        </div>\n        <section className=\"card-section card-list-layout-list\">\n          <ol className=\"card-list\">\n            {filteredChecks.map(check => {\n              const checkId: number = check.id || 0;\n              if (!check.id) {\n                return;\n              }\n              const checkType = Object.keys(check.settings)[0];\n              return (\n                <li className=\"card-item-wrapper\">\n                  <a className=\"card-item\" onClick={() => this.onSelectCheck(checkId)}>\n                    <HorizontalGroup justify=\"space-between\">\n                      <div className=\"card-item-body\">\n                        <figure className=\"card-item-figure\">\n                          <CheckHealth check={check} ds={ds} />\n                        </figure>\n                        <VerticalGroup>\n                          <div className=\"card-item-name\">{check.target}</div>\n                          <div className=\"card-item-sub-name\">{check.job}</div>\n                        </VerticalGroup>\n                      </div>\n                      <HorizontalGroup justify=\"flex-end\">\n                        <div className=\"card-item-header\">\n                          <div className=\"card-item-type\">{checkType}</div>\n                          {this.formatLabels(check.labels)}\n                        </div>\n                        <Container margin=\"lg\">\n                          <a onClick={this.showDashboard(check)}>\n                            <Icon name=\"apps\" size=\"xl\" />\n                          </a>\n                        </Container>\n                        <UptimeGauge\n                          labelNames={['instance', 'job']}\n                          labelValues={[check.target, check.job]}\n                          ds={ds}\n                          height={70}\n                          width={150}\n                          sparkline={false}\n                        />\n                      </HorizontalGroup>\n                    </HorizontalGroup>\n                  </a>\n                </li>\n              );\n            })}\n          </ol>\n        </section>\n        {totalPages > 1 && (\n          <Pagination numberOfPages={totalPages} currentPage={currentPage} onNavigate={this.changePage} />\n        )}\n      </div>\n    );\n  }\n\n  onAddNew = () => {\n    this.setState({\n      addNew: true,\n    });\n  };\n\n  onRefresh = async () => {\n    const { instance } = this.props;\n    const checks = await instance.api.listChecks();\n    this.setState({\n      checks,\n    });\n  };\n\n  onGoBack = (refresh: boolean) => {\n    this.setState({\n      addNew: false,\n    });\n    if (refresh) {\n      this.onRefresh();\n    }\n    getLocationSrv().update({\n      partial: true,\n      query: {\n        id: '',\n      },\n    });\n  };\n\n  render() {\n    const { instance } = this.props;\n    const { check, addNew } = this.state;\n    if (!instance) {\n      return <div>Loading...</div>;\n    }\n    if (check) {\n      return <CheckEditor check={check} instance={instance.api} onReturn={this.onGoBack} />;\n    }\n    if (addNew) {\n      const template = {\n        job: '',\n        target: '',\n        frequency: 60000,\n        timeout: 2500,\n        enabled: true,\n        labels: [],\n        probes: [],\n        settings: {\n          ping: {\n            ipVersion: IpVersion.V4,\n            dontFragment: false,\n          },\n        },\n      } as Check;\n      return <CheckEditor check={template} instance={instance.api} onReturn={this.onGoBack} />;\n    }\n    return <div>{this.renderCheckList()}</div>;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  Badge,\n  BadgeColor,\n  Modal,\n  Button,\n  Container,\n  ConfirmModal,\n  Field,\n  Input,\n  HorizontalGroup,\n  Switch,\n  Legend,\n  IconName,\n} from '@grafana/ui';\nimport { Label as SMLabel, Probe, OrgRole } from 'types';\nimport { SMDataSource } from 'datasource/DataSource';\nimport { hasRole } from 'utils';\nimport { SMLabelsForm } from './utils';\nimport { UptimeGauge } from './UptimeGauge';\n\ninterface Props {\n  probe: Probe;\n  instance: SMDataSource;\n  onReturn: (reload: boolean) => void;\n}\n\ninterface State {\n  probe?: Probe;\n  showDeleteModal: boolean;\n  showTokenModal: boolean;\n  probeToken: string;\n  showResetModal: boolean;\n}\n\nexport class ProbeEditor extends PureComponent<Props, State> {\n  state: State = {\n    showDeleteModal: false,\n    showTokenModal: false,\n    showResetModal: false,\n    probeToken: '',\n  };\n\n  async componentDidMount() {\n    const probe = { ...this.props.probe } as Probe;\n    this.setState({\n      probe: probe,\n    });\n  }\n\n  showDeleteProbeModal = (show: boolean) => () => {\n    this.setState({ showDeleteModal: show });\n  };\n\n  showTokenModal = (show: boolean) => () => {\n    this.setState({ showTokenModal: show });\n  };\n\n  showResetModal = (show: boolean) => () => {\n    this.setState({ showResetModal: show });\n  };\n\n  onRemoveProbe = async () => {\n    const id = this.props.probe.id || 0;\n    if (!this.props.probe.id) {\n      return;\n    }\n    const info = this.props.instance.deleteProbe(id);\n    console.log('Remove Probe', id, info);\n    this.props.onReturn(true);\n  };\n\n  onLabelsUpdate = (labels: SMLabel[]) => {\n    let probe = { ...this.state.probe } as Probe;\n    probe.labels = labels;\n    this.setState({ probe });\n  };\n\n  onLatUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let probe = { ...this.state.probe } as Probe;\n    probe.latitude = event.target.valueAsNumber;\n    this.setState({ probe });\n  };\n\n  onLongUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let probe = { ...this.state.probe } as Probe;\n    probe.longitude = event.target.valueAsNumber;\n    this.setState({ probe });\n  };\n\n  onRegionUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let probe = { ...this.state.probe } as Probe;\n    probe.region = event.target.value;\n    this.setState({ probe });\n  };\n\n  onNameUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let probe = { ...this.state.probe } as Probe;\n    probe.name = event.target.value;\n    this.setState({ probe });\n  };\n\n  onSave = async () => {\n    const { instance } = this.props;\n    const { probe } = this.state;\n    if (!probe) {\n      return;\n    }\n    if (probe.id) {\n      console.log('UPDATE', probe, instance);\n      const info = await instance.updateProbe(probe);\n      console.log('got', info);\n      this.props.onReturn(true);\n    } else {\n      console.log('ADD', probe);\n      const info = await instance.addProbe(probe);\n      this.setState({ showTokenModal: true, probeToken: info.token });\n    }\n  };\n\n  onResetToken = async () => {\n    const { instance } = this.props;\n    const probe = { ...this.props.probe };\n    const info = await instance.resetProbeToken(probe);\n    this.setState({ showTokenModal: true, showResetModal: false, probeToken: info.token });\n  };\n\n  onBack = () => {\n    this.props.onReturn(false);\n  };\n\n  isValid(): boolean {\n    const { probe } = this.state;\n    if (!probe) {\n      return false;\n    }\n    if (probe.name === '') {\n      console.log('probe name must be set');\n      return false;\n    }\n    if (probe.name.length > 32) {\n      console.log('probe name must be less than 32 characters');\n      return false;\n    }\n    if (probe.latitude < -90 || probe.latitude > 90) {\n      console.log('probe latitude must be between -90 and 90');\n      return false;\n    }\n    if (probe.longitude < -180 || probe.longitude > 180) {\n      console.log('probe longitude must be between -180 and 180');\n      return false;\n    }\n    if (probe.region === '') {\n      console.log('probe region must be set');\n      return false;\n    }\n    if (probe.labels.length > 3) {\n      console.log('probes cannot have more than 3 labels');\n      return false;\n    }\n    for (const l of probe.labels) {\n      if (l.name === '' || l.value === '') {\n        console.log('label name and value must be set');\n        return false;\n      }\n      if (!l.name.match(/^[a-zA-Z0-9_]*$/)) {\n        console.log('label name can only contain a-zA-Z0-9_');\n        return false;\n      }\n      if (l.name.length > 32) {\n        console.log('label name must be less than 32 chars');\n        return false;\n      }\n      if (l.value.length > 64) {\n        console.log('label name must be less than 64 chars');\n        return false;\n      }\n    }\n    return true;\n  }\n\n  renderStatus() {\n    const { probe, showResetModal } = this.state;\n    const { instance } = this.props;\n\n    if (!probe) {\n      return;\n    }\n    let isEditor = !probe.public && hasRole(OrgRole.EDITOR);\n    let onlineTxt = 'Offline';\n    let onlineIcon = 'heart-break' as IconName;\n    let color = 'red' as BadgeColor;\n    if (probe.online) {\n      onlineTxt = 'Online';\n      onlineIcon = 'heart';\n      color = 'green';\n    }\n\n    return (\n      <Container margin=\"md\">\n        <Legend>\n          Status: &nbsp;\n          <Badge color={color} icon={onlineIcon} text={onlineTxt} />\n        </Legend>\n        {!probe.public && (\n          <Container>\n            <Button variant=\"destructive\" onClick={this.showResetModal(true)} disabled={!isEditor}>\n              Reset Access Token\n            </Button>\n            <ConfirmModal\n              isOpen={showResetModal}\n              title=\"Reset Probe Access Token\"\n              body=\"Are you sure you want to reset the access token for this Probe?\"\n              confirmText=\"Reset Token\"\n              onConfirm={this.onResetToken}\n              onDismiss={this.showResetModal(false)}\n            />\n          </Container>\n        )}\n        <br />\n        <UptimeGauge\n          labelNames={['probe']}\n          labelValues={[probe.name]}\n          ds={instance.getMetricsDS()}\n          height={200}\n          width={300}\n          sparkline={true}\n        />\n      </Container>\n    );\n  }\n\n  render() {\n    const { probe, showDeleteModal, showTokenModal, probeToken } = this.state;\n    if (!probe) {\n      return <div>Loading...</div>;\n    }\n    let legend = 'Configuration';\n    if (!probe.id) {\n      legend = 'Add Probe';\n    }\n    let isEditor = !probe.public && hasRole(OrgRole.EDITOR);\n\n    return (\n      <HorizontalGroup align=\"flex-start\">\n        <Container>\n          <Legend>{legend}</Legend>\n          <Container margin=\"md\">\n            <HorizontalGroup>\n              <Field label=\"Probe Name\" description=\"Unique name of probe\" disabled={!isEditor}>\n                <Input type=\"string\" value={probe.name} onChange={this.onNameUpdate} />\n              </Field>\n              <Field\n                label=\"Public\"\n                description=\"Public probes are run by Grafana Labs and can be used by all users\"\n                disabled={!isEditor}\n              >\n                <Container padding=\"sm\">\n                  <Switch value={probe.public} disabled={false} />\n                </Container>\n              </Field>\n            </HorizontalGroup>\n          </Container>\n          <Container margin=\"md\">\n            <h3 className=\"page-heading\">Location information</h3>\n            <HorizontalGroup>\n              <Field label=\"Latitude\" description=\"Latitude coordinates of this probe\" disabled={!isEditor}>\n                <Input\n                  label=\"Latitude\"\n                  type=\"number\"\n                  placeholder=\"0.0\"\n                  value={probe?.latitude || 0.0}\n                  onChange={this.onLatUpdate}\n                />\n              </Field>\n              <Field label=\"Longitude\" description=\"Longitude coordinates of this probe\" disabled={!isEditor}>\n                <Input\n                  label=\"Longitude\"\n                  type=\"number\"\n                  placeholder=\"0.0\"\n                  value={probe?.longitude || 0.0}\n                  onChange={this.onLongUpdate}\n                />\n              </Field>\n            </HorizontalGroup>\n            <HorizontalGroup>\n              <Field label=\"Region\" description=\"Latitude coordinates of this probe\" disabled={!isEditor}>\n                <Input\n                  label=\"Region\"\n                  type=\"string\"\n                  placeholder=\"region\"\n                  value={probe.region}\n                  onChange={this.onRegionUpdate}\n                />\n              </Field>\n            </HorizontalGroup>\n          </Container>\n          <Container margin=\"md\">\n            <h3 className=\"page-heading\">Labels</h3>\n            <SMLabelsForm\n              labels={probe.labels}\n              onUpdate={this.onLabelsUpdate}\n              isEditor={isEditor}\n              type=\"Label\"\n              limit={3}\n            />\n          </Container>\n          <Container margin=\"md\">\n            <HorizontalGroup>\n              <Button onClick={this.onSave} disabled={!isEditor || !this.isValid()}>\n                Save\n              </Button>\n              {probe.id && (\n                <Button variant=\"destructive\" onClick={this.showDeleteProbeModal(true)} disabled={!isEditor}>\n                  Delete Probe\n                </Button>\n              )}\n              <ConfirmModal\n                isOpen={showDeleteModal}\n                title=\"Delete Probe\"\n                body=\"Are you sure you want to delete this Probe?\"\n                confirmText=\"Delete Probe\"\n                onConfirm={this.onRemoveProbe}\n                onDismiss={this.showDeleteProbeModal(false)}\n              />\n              <a onClick={this.onBack}>Back</a>\n            </HorizontalGroup>\n          </Container>\n          <Modal\n            isOpen={showTokenModal}\n            title=\"Probe Authentication Token\"\n            icon={'lock'}\n            onDismiss={probe.id ? this.showTokenModal(false) : this.onBack}\n          >\n            {probeToken}\n          </Modal>\n        </Container>\n        {probe.id && this.renderStatus()}\n      </HorizontalGroup>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { GrafanaInstances, Label, Probe, OrgRole } from 'types';\nimport { Button, HorizontalGroup, IconName, Badge, BadgeColor } from '@grafana/ui';\nimport { getLocationSrv } from '@grafana/runtime';\nimport { ProbeEditor } from 'components/ProbeEditor';\nimport { UptimeGauge } from 'components/UptimeGauge';\nimport { hasRole } from 'utils';\n//import ProbesMap from 'components/ProbesMap';\n\ninterface Props {\n  instance: GrafanaInstances;\n  id?: string;\n}\n\ninterface State {\n  probes: Probe[];\n  probe?: Probe; // selected Probe\n  addNew: boolean;\n}\n\nexport class ProbesPage extends PureComponent<Props, State> {\n  state: State = {\n    probes: [],\n    addNew: false,\n  };\n\n  async componentDidMount() {\n    const { instance, id } = this.props;\n    const probes = await instance.api.listProbes();\n    const num = id ? parseInt(id, 10) : -1;\n    const probe = probes.find(p => p.id === num);\n    this.setState({ probes, probe });\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    if (this.props.id !== oldProps.id) {\n      const { id } = this.props;\n      const num = id ? parseInt(id, 10) : -1;\n      const probe = this.state.probes.find(p => p.id === num);\n      this.setState({ probe });\n    }\n  }\n\n  labelsToString(labels: Label[]) {\n    return labels\n      .map(label => {\n        return label.name + '=' + label.value;\n      })\n      .join(' ');\n  }\n\n  onSelectProbe = (id: number) => {\n    getLocationSrv().update({\n      partial: true,\n      query: {\n        id,\n      },\n    });\n  };\n\n  onAddNew = () => {\n    this.setState({\n      addNew: true,\n    });\n  };\n\n  onRefresh = async () => {\n    const { instance } = this.props;\n    const probes = await instance.api.listProbes();\n    this.setState({\n      probes,\n    });\n  };\n\n  onGoBack = (refresh: boolean) => {\n    console.log('go back');\n    this.setState({\n      addNew: false,\n    });\n    if (refresh) {\n      this.onRefresh();\n    }\n    getLocationSrv().update({\n      partial: true,\n      query: {\n        id: '',\n      },\n    });\n  };\n\n  render() {\n    const { instance } = this.props;\n    const { probe, addNew } = this.state;\n    if (!instance) {\n      return <div>Loading...</div>;\n    }\n\n    if (probe) {\n      return <ProbeEditor probe={probe} instance={instance.api} onReturn={this.onGoBack} />;\n    }\n    if (addNew) {\n      const template = {\n        name: '',\n        public: false,\n        latitude: 0.0,\n        longitude: 0.0,\n        region: '',\n        labels: [],\n        online: false,\n        onlineChange: 0,\n      } as Probe;\n      return <ProbeEditor probe={template} instance={instance.api} onReturn={this.onGoBack} />;\n    }\n    return <div>{this.renderProbeList()}</div>;\n  }\n\n  renderProbeList() {\n    const { probes } = this.state;\n    const { instance } = this.props;\n    if (!probes) {\n      return null;\n    }\n    return (\n      <div>\n        {hasRole(OrgRole.EDITOR) && (\n          <HorizontalGroup justify=\"flex-end\">\n            <Button onClick={this.onAddNew}>New</Button>\n          </HorizontalGroup>\n        )}\n        {probes.map(probe => {\n          const probeId: number = probe.id || 0;\n          if (!probe.id) {\n            return;\n          }\n          let onlineTxt = 'Offline';\n          let onlineIcon = 'heart-break' as IconName;\n          let color = 'red' as BadgeColor;\n          if (probe.online) {\n            onlineTxt = 'Online';\n            onlineIcon = 'heart';\n            color = 'green';\n          }\n          return (\n            <div key={probeId} className=\"add-data-source-item\" onClick={() => this.onSelectProbe(probeId)}>\n              <div className=\"add-data-source-item-text-wrapper\">\n                <span className=\"add-data-source-item-text\">{probe.name}</span>\n                <span className=\"add-data-source-item-desc\">\n                  <Badge color={color} icon={onlineIcon} text={onlineTxt} />\n                  <div>{this.labelsToString(probe.labels)}</div>\n                </span>\n              </div>\n              <UptimeGauge\n                labelNames={['probe']}\n                labelValues={[probe.name]}\n                ds={instance.api.getMetricsDS()}\n                height={60}\n                width={150}\n                sparkline={false}\n              />\n              <div className=\"add-data-source-item-actions\">\n                <Button>Select</Button>\n              </div>\n            </div>\n          );\n        })}\n        <br />\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { NavModelItem, AppRootProps, DataSourceInstanceSettings } from '@grafana/data';\nimport { GlobalSettings, RegistrationInfo, GrafanaInstances, OrgRole } from './types';\nimport { SMDataSource } from 'datasource/DataSource';\nimport { findSMDataSources, createNewApiInstance, hasRole, dashboardUID } from 'utils';\nimport { SMOptions } from 'datasource/types';\nimport { getDataSourceSrv, getLocationSrv } from '@grafana/runtime';\nimport { TenantSetup } from './components/TenantSetup';\nimport { TenantView } from 'components/TenantView';\nimport { DashboardList } from 'components/DashboardList';\nimport { ChecksPage } from 'page/ChecksPage';\nimport { ProbesPage } from 'page/ProbesPage';\n\ninterface Props extends AppRootProps<GlobalSettings> {}\ninterface State {\n  settings: Array<DataSourceInstanceSettings<SMOptions>>;\n  instance?: GrafanaInstances;\n  info?: RegistrationInfo;\n  valid?: boolean;\n}\n\nexport class RootPage extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      settings: findSMDataSources(),\n    };\n  }\n\n  async loadInstances() {\n    const settings = this.state.settings[0];\n    if (settings && settings.name) {\n      const api = (await getDataSourceSrv().get(settings.name)) as SMDataSource;\n      if (api) {\n        let global = api.instanceSettings.jsonData;\n        const instance: GrafanaInstances = {\n          api,\n          metrics: await loadDataSourceIfExists(global?.metrics?.grafanaName),\n          logs: await loadDataSourceIfExists(global?.logs?.grafanaName),\n        };\n\n        this.setState({\n          instance,\n          valid: isValid(instance),\n        });\n        this.updateNav();\n        return;\n      }\n    }\n\n    // Create a new instance\n    if (true) {\n      console.log('Creating a new datasource TODO, check user auth');\n      await createNewApiInstance();\n      console.log('Reload the windows (will redirect)');\n      window.location.reload(); // force reload\n    }\n  }\n\n  async componentDidMount() {\n    this.updateNav();\n    this.loadInstances();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.query !== prevProps.query) {\n      if (this.props.query.page !== prevProps.query.page) {\n        this.updateNav();\n      }\n    }\n  }\n\n  updateNav() {\n    const { path, onNavChanged, query, meta } = this.props;\n    const selected = query.page || 'status';\n    const tabs: NavModelItem[] = [];\n    if (this.state.valid && selected !== 'setup' && selected !== 'redirect') {\n      tabs.push({\n        text: 'Status',\n        // icon: 'fa fa-fw fa-file-text-o',\n        url: path,\n        id: 'status',\n      });\n      tabs.push({\n        text: 'Checks',\n        url: path + '?page=checks',\n        id: 'checks',\n      });\n      tabs.push({\n        text: 'Probes',\n        url: path + '?page=probes',\n        id: 'probes',\n      });\n    } else if (this.state.valid && selected === 'redirect') {\n      tabs.push({\n        text: 'Dashboard Redirect',\n        url: path + '?page=redirect',\n        id: 'redirect',\n      });\n      tabs.push({\n        text: 'Status',\n        // icon: 'fa fa-fw fa-file-text-o',\n        url: path,\n        id: 'status',\n      });\n    } else {\n      tabs.push({\n        text: 'Setup',\n        // icon: 'fa fa-fw fa-file-text-o',\n        url: path,\n        id: 'setup',\n      });\n    }\n\n    // Set the active tab\n    let found = false;\n\n    for (const tab of tabs) {\n      tab.active = !found && selected === tab.id;\n      if (tab.active) {\n        found = true;\n      }\n    }\n    if (!found) {\n      tabs[0].active = true;\n    }\n\n    const node = {\n      text: 'Synthetic Monitoring',\n      img: meta.info.logos.large,\n      subTitle: 'Grafana Cloud Synthetic Monitoring',\n      url: path,\n      children: tabs,\n    };\n\n    // Update the page header\n    onNavChanged({\n      node: node,\n      main: node,\n    });\n  }\n\n  //-----------------------------------------------------------------------------------------\n  // Multiple Config\n  //-----------------------------------------------------------------------------------------\n  renderMultipleConfigs() {\n    return <div>TODO... multiple instances... delete one!!!!</div>;\n  }\n\n  //-----------------------------------------------------------------------------------------\n  // Setup\n  //-----------------------------------------------------------------------------------------\n  renderStatus() {\n    const { instance } = this.state;\n    const options = instance!.api.instanceSettings.jsonData;\n    return (\n      <div>\n        <DashboardList options={options} checkUpdates={false} />\n        <br />\n        {hasRole(OrgRole.EDITOR) && <TenantView settings={options} />}\n      </div>\n    );\n  }\n\n  dashboardRedirect() {\n    const { instance } = this.state;\n    const { query } = this.props;\n    if (!instance) {\n      return <div>Loading.... (or maybe a user permissions error?)</div>;\n    }\n    if (!query.dashboard) {\n      return <div>Dashboard not found</div>;\n    }\n    const target = dashboardUID(query.dashboard, instance!.api);\n\n    if (!target) {\n      console.log('dashboard not found.', query);\n      return <div>Dashboard not found</div>;\n    }\n\n    const d = `d/${target.uid}`;\n    let q = { ...query };\n    delete q.dashboard;\n    delete q.page;\n    getLocationSrv().update({\n      partial: false,\n      path: d,\n      query: q,\n    });\n    return null;\n  }\n\n  //-----------------------------------------------------------------------------------------\n  // Setup\n  //-----------------------------------------------------------------------------------------\n  renderSetup() {\n    const { instance } = this.state;\n    if (!instance) {\n      return <div>Loading.... (or maybe a user permissions error?)</div>;\n    }\n\n    return <TenantSetup instance={instance.api} />;\n  }\n\n  render() {\n    const { settings, valid, instance } = this.state;\n    if (settings.length > 1) {\n      return this.renderMultipleConfigs();\n    }\n    const { query } = this.props;\n    if (!valid || query.page === 'setup') {\n      return this.renderSetup();\n    }\n\n    if ('dashboard' in query) {\n      return this.dashboardRedirect();\n    }\n\n    if (query.page === 'checks') {\n      return <ChecksPage instance={instance!} id={query.id} />;\n    }\n    if (query.page === 'probes') {\n      return <ProbesPage instance={instance!} id={query.id} />;\n    }\n\n    return this.renderStatus();\n  }\n}\n\nasync function loadDataSourceIfExists(name?: string) {\n  if (name) {\n    try {\n      return await getDataSourceSrv().get();\n    } catch {}\n  }\n  return undefined;\n}\n\nfunction isValid(instance: GrafanaInstances): boolean {\n  if (!instance || !instance.logs || !instance.metrics || !instance.api) {\n    return false;\n  }\n  return true;\n}\n","// Angular pages\nimport { ExampleConfigCtrl } from './legacy/config';\nimport { AppPlugin } from '@grafana/data';\nimport { GlobalSettings } from './types';\nimport { RootPage } from 'RootPage';\n\n// Legacy exports just for testing\nexport { ExampleConfigCtrl as ConfigCtrl };\n\nexport const plugin = new AppPlugin<GlobalSettings>().setRootPage(RootPage);\n"],"sourceRoot":""}